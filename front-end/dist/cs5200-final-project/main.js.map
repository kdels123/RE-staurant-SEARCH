{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-profile-private/admin-profile-private.component.css","webpack:///./src/app/admin-profile-private/admin-profile-private.component.html","webpack:///./src/app/admin-profile-private/admin-profile-private.component.ts","webpack:///./src/app/admin-register/admin-register.component.css","webpack:///./src/app/admin-register/admin-register.component.html","webpack:///./src/app/admin-register/admin-register.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/critic-all-critics/critic-all-critics.component.css","webpack:///./src/app/critic-all-critics/critic-all-critics.component.html","webpack:///./src/app/critic-all-critics/critic-all-critics.component.ts","webpack:///./src/app/critic-profile-private/critic-profile-private.component.css","webpack:///./src/app/critic-profile-private/critic-profile-private.component.html","webpack:///./src/app/critic-profile-private/critic-profile-private.component.ts","webpack:///./src/app/critic-profile/critic-profile.component.css","webpack:///./src/app/critic-profile/critic-profile.component.html","webpack:///./src/app/critic-profile/critic-profile.component.ts","webpack:///./src/app/event-all-events/event-all-events.component.css","webpack:///./src/app/event-all-events/event-all-events.component.html","webpack:///./src/app/event-all-events/event-all-events.component.ts","webpack:///./src/app/event-create/event-create.component.css","webpack:///./src/app/event-create/event-create.component.html","webpack:///./src/app/event-create/event-create.component.ts","webpack:///./src/app/event-detail/event-detail.component.css","webpack:///./src/app/event-detail/event-detail.component.html","webpack:///./src/app/event-detail/event-detail.component.ts","webpack:///./src/app/event-update/event-update.component.css","webpack:///./src/app/event-update/event-update.component.html","webpack:///./src/app/event-update/event-update.component.ts","webpack:///./src/app/owner-all-owners/owner-all-owners.component.css","webpack:///./src/app/owner-all-owners/owner-all-owners.component.html","webpack:///./src/app/owner-all-owners/owner-all-owners.component.ts","webpack:///./src/app/owner-profile-private/owner-profile-private.component.css","webpack:///./src/app/owner-profile-private/owner-profile-private.component.html","webpack:///./src/app/owner-profile-private/owner-profile-private.component.ts","webpack:///./src/app/owner-profile/owner-profile.component.css","webpack:///./src/app/owner-profile/owner-profile.component.html","webpack:///./src/app/owner-profile/owner-profile.component.ts","webpack:///./src/app/patron-all-patrons/patron-all-patrons.component.css","webpack:///./src/app/patron-all-patrons/patron-all-patrons.component.html","webpack:///./src/app/patron-all-patrons/patron-all-patrons.component.ts","webpack:///./src/app/patron-profile-private/patron-profile-private.component.css","webpack:///./src/app/patron-profile-private/patron-profile-private.component.html","webpack:///./src/app/patron-profile-private/patron-profile-private.component.ts","webpack:///./src/app/patron-profile/patron-profile.component.css","webpack:///./src/app/patron-profile/patron-profile.component.html","webpack:///./src/app/patron-profile/patron-profile.component.ts","webpack:///./src/app/restaurant-all-restaurants/restaurant-all-restaurants.component.css","webpack:///./src/app/restaurant-all-restaurants/restaurant-all-restaurants.component.html","webpack:///./src/app/restaurant-all-restaurants/restaurant-all-restaurants.component.ts","webpack:///./src/app/restaurant-detail/restaurant-detail.component.css","webpack:///./src/app/restaurant-detail/restaurant-detail.component.html","webpack:///./src/app/restaurant-detail/restaurant-detail.component.ts","webpack:///./src/app/restaurant-home/restaurant-home.component.css","webpack:///./src/app/restaurant-home/restaurant-home.component.html","webpack:///./src/app/restaurant-home/restaurant-home.component.ts","webpack:///./src/app/restaurant-search/restaurant-search.component.css","webpack:///./src/app/restaurant-search/restaurant-search.component.html","webpack:///./src/app/restaurant-search/restaurant-search.component.ts","webpack:///./src/app/restaurant-update/restaurant-update.component.css","webpack:///./src/app/restaurant-update/restaurant-update.component.html","webpack:///./src/app/restaurant-update/restaurant-update.component.ts","webpack:///./src/app/review-update/review-update.component.css","webpack:///./src/app/review-update/review-update.component.html","webpack:///./src/app/review-update/review-update.component.ts","webpack:///./src/app/services/admin.service.client.ts","webpack:///./src/app/services/critic.service.client.ts","webpack:///./src/app/services/event.service.client.ts","webpack:///./src/app/services/owner.service.client.ts","webpack:///./src/app/services/patron.service.client.ts","webpack:///./src/app/services/restaurant.service.client.ts","webpack:///./src/app/services/review.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/user-login/user-login.component.css","webpack:///./src/app/user-login/user-login.component.html","webpack:///./src/app/user-login/user-login.component.ts","webpack:///./src/app/user-register/user-register.component.css","webpack:///./src/app/user-register/user-register.component.html","webpack:///./src/app/user-register/user-register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n    <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n\\n    <h1>Profile</h1>\\n\\n    <div class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"firstName\\\" placeholder=\\\"first name\\\" class=\\\"form-control\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"lastName\\\" placeholder=\\\"last name\\\" class=\\\"form-control\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"email\\\" placeholder=\\\"email\\\" class=\\\"form-control\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"phone\\\" placeholder=\\\"phone number\\\" class=\\\"form-control\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"dob\\\" placeholder=\\\"date of birth (YYYY-MM-DD)\\\" class=\\\"form-control\\\"/>\\n    </div>\\n    <button (click)=\\\"update(firstName, lastName, email, phone, dob)\\\"\\n            class=\\\"btn btn-block btn-dark\\\">Update Profile\\n    </button>\\n    <br/>\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-block btn-dark\\\">Logout</button>\\n\\n    <h2>Current Users</h2>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"goToAllRestaurantOwners()\\\" class=\\\"btn btn-link\\\">View All Restaurant Owners</button>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"goToAllCritics()\\\" class=\\\"btn btn-link\\\">View All Critics</button>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"goToAllPatrons()\\\" class=\\\"btn btn-link\\\">View All Patrons</button>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"goToRegister()\\\" class=\\\"btn btn-link\\\">Add a User</button>\\n    </div>\\n    <h2>Restaurants</h2>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"goToAllRestaurants()\\\" class=\\\"btn btn-link\\\">View All Restaurants</button>\\n    </div>\\n    <h2>Events</h2>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"goToAllEvents()\\\" class=\\\"btn btn-link\\\">View All Events</button>\\n    </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AdminServiceClient} from '../services/admin.service.client';\n\n@Component({\n  selector: 'app-admin-profile-private',\n  templateUrl: './admin-profile-private.component.html',\n  styleUrls: ['./admin-profile-private.component.css']\n})\nexport class AdminProfilePrivateComponent implements OnInit {\n\n    constructor(private adminService: AdminServiceClient,\n                private router: Router,\n                private route: ActivatedRoute) {\n        this.route.params.subscribe(params => this.loadUser(params['adminId']));\n\n    }\n\n    admin;\n    adminId;\n    username;\n    firstName;\n    lastName;\n    email;\n    phone;\n    dob;\n\n    loadUser(adminId) {\n        this.adminId = adminId;\n        this.adminService.findAdminById(this.adminId)\n            .then(admin => this.loadProfile(admin));\n    }\n\n    loadProfile(user) {\n        this.username = user.username;\n        this.firstName = user.firstName;\n        this.lastName = user.lastName;\n        this.email = user.email;\n        this.phone = user.phone;\n        this.dob = this.styleDate(user.dob);\n    }\n\n    update(firstName, lastName, email, phone, dob) {\n        this.adminService.updateAdmin(firstName, lastName, email, phone, dob, this.adminId);\n    }\n\n    goToAllRestaurantOwners() {\n        this.router.navigate(['/admin/' + this.adminId + '/owners']);\n    }\n\n    goToAllCritics() {\n        this.router.navigate(['/admin/' + this.adminId + '/critics']);\n    }\n\n    goToAllPatrons() {\n        this.router.navigate(['/admin/' + this.adminId + '/patrons']);\n    }\n\n    goToRegister() {\n        this.router.navigate(['admin/' + this.adminId + '/register']);\n    }\n\n    goToAllRestaurants() {\n        this.router.navigate(['/admin/' + this.adminId + '/restaurants']);\n    }\n\n    goToAllEvents() {\n        this.router.navigate(['/admin/' + this.adminId + '/events']);\n    }\n\n    logout() {\n        this.router.navigate(['home']);\n    }\n\n    styleDate(date) {\n        return date.substring(0, 10);\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n    ngOnInit() {\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Create a User - Admin</h1>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"passwordI\\\" placeholder=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"passwordII\\\" placeholder=\\\"verify password\\\" class=\\\"form-control\\\" type=\\\"password\\\"/>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n      <button (click)=\\\"setRole('patron')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Restaurant Patron</button>\\n      <button (click)=\\\"setRole('critic')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Critic</button>\\n      <button (click)=\\\"setRole('owner')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Restaurant Owner</button>\\n    </div>\\n  </div>\\n\\n  <button (click)=\\\"register(username, passwordI, passwordII)\\\" class=\\\"btn btn-block btn-dark\\\">Create User</button>\\n\\n  <div>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"float: left; color: black\\\">Home</button>\\n    <button (click)=\\\"goToProfile()\\\" class=\\\"btn btn-link\\\" style=\\\"float: right; color: black\\\">Return to Profile</button>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {AdminServiceClient} from '../services/admin.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PatronServiceClient} from '../services/patron.service.client';\n\n@Component({\n  selector: 'app-admin-register',\n  templateUrl: './admin-register.component.html',\n  styleUrls: ['./admin-register.component.css']\n})\nexport class AdminRegisterComponent implements OnInit {\n\n    constructor(private router: Router,\n                private route: ActivatedRoute,\n                private adminService: AdminServiceClient,\n                private ownerService: OwnerServiceClient,\n                private criticService: CriticServiceClient,\n                private patronService: PatronServiceClient) {\n        this.route.params.subscribe(params => this.loadAdmin(params['adminId']));\n    }\n\n    adminId;\n    username;\n    role = null;\n    passwordI;\n    passwordII;\n    userId;\n\n    setRole(role) {\n        this.role = role;\n    }\n\n    loadAdmin(adminId) {\n        this.adminId = adminId;\n    }\n\n    register(username, passwordI, passwordII) {\n        if (passwordI !== passwordII) {\n            alert('passwords do not match');\n        } else if (this.role === null) {\n            alert('please specify user type');\n        }\n        else if (this.role === 'patron') {\n            this.patronService.createPatron(username, passwordI)\n                .then(user => (this.userId = user.id))\n                .then(() => (this.router.navigate(['profile/patron/' + this.userId])))\n                .catch(() => alert('Useranme already exists, please try again'));\n        } else if (this.role === 'owner') {\n            this.ownerService.createOwner(username, passwordI)\n                .then(user => (this.userId = user.id))\n                .then(() => (this.router.navigate(['profile/owner/' + this.userId])))\n                .catch(() => alert('Useranme already exists, please try again'));\n        } else if (this.role === 'critic') {\n            this.criticService.createCritic(username, passwordI)\n                .then(user => (this.userId = user.id))\n                .then(() => (this.router.navigate(['profile/critic/' + this.userId])))\n                .catch(() => alert('Useranme already exists, please try again'));\n        }\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n    goToProfile() {\n        this.router.navigate(['profile/admin/' + this.adminId]);\n    }\n\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet>\\n</router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { RestaurantSearchComponent } from './restaurant-search/restaurant-search.component';\nimport { RestaurantHomeComponent } from './restaurant-home/restaurant-home.component';\nimport {RestaurantServiceClient} from './services/restaurant.service.client';\nimport {FormsModule} from '@angular/forms';\nimport {routing} from './app.routing';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { UserRegisterComponent } from './user-register/user-register.component';\nimport { OwnerProfilePrivateComponent } from './owner-profile-private/owner-profile-private.component';\nimport { UserServiceClient } from './services/user.service.client';\nimport { RestaurantDetailComponent } from './restaurant-detail/restaurant-detail.component';\nimport { ReviewServiceClient } from './services/review.service.client';\nimport { CriticServiceClient } from './services/critic.service.client';\nimport { CriticProfileComponent } from './critic-profile/critic-profile.component';\nimport { CriticProfilePrivateComponent } from './critic-profile-private/critic-profile-private.component';\nimport {OwnerServiceClient} from './services/owner.service.client';\nimport { PatronProfilePrivateComponent } from './patron-profile-private/patron-profile-private.component';\nimport {PatronServiceClient} from './services/patron.service.client';\nimport { PatronProfileComponent } from './patron-profile/patron-profile.component';\nimport { EventCreateComponent } from './event-create/event-create.component';\nimport {EventServiceClient} from './services/event.service.client';\nimport { EventDetailComponent } from './event-detail/event-detail.component';\nimport { AdminProfilePrivateComponent } from './admin-profile-private/admin-profile-private.component';\nimport {AdminServiceClient} from './services/admin.service.client';\nimport { OwnerAllOwnersComponent } from './owner-all-owners/owner-all-owners.component';\nimport { CriticAllCriticsComponent } from './critic-all-critics/critic-all-critics.component';\nimport { PatronAllPatronsComponent } from './patron-all-patrons/patron-all-patrons.component';\nimport { RestaurantAllRestaurantsComponent } from './restaurant-all-restaurants/restaurant-all-restaurants.component';\nimport { EventAllEventsComponent } from './event-all-events/event-all-events.component';\nimport { OwnerProfileComponent } from './owner-profile/owner-profile.component';\nimport { AdminRegisterComponent } from './admin-register/admin-register.component';\nimport { EventUpdateComponent } from './event-update/event-update.component';\nimport { RestaurantUpdateComponent } from './restaurant-update/restaurant-update.component';\nimport { ReviewUpdateComponent } from './review-update/review-update.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RestaurantSearchComponent,\n    RestaurantHomeComponent,\n    UserLoginComponent,\n    UserRegisterComponent,\n    OwnerProfilePrivateComponent,\n    RestaurantDetailComponent,\n    CriticProfileComponent,\n    CriticProfilePrivateComponent,\n    PatronProfilePrivateComponent,\n    PatronProfileComponent,\n    EventCreateComponent,\n    EventDetailComponent,\n    AdminProfilePrivateComponent,\n    OwnerAllOwnersComponent,\n    CriticAllCriticsComponent,\n    PatronAllPatronsComponent,\n    RestaurantAllRestaurantsComponent,\n    EventAllEventsComponent,\n    OwnerProfileComponent,\n    AdminRegisterComponent,\n    EventUpdateComponent,\n    RestaurantUpdateComponent,\n    ReviewUpdateComponent\n  ],\n  imports: [\n    BrowserModule,\n      FormsModule,\n      routing\n  ],\n  providers: [\n      RestaurantServiceClient,\n      UserServiceClient,\n      ReviewServiceClient,\n      CriticServiceClient,\n      OwnerServiceClient,\n      PatronServiceClient,\n      EventServiceClient,\n      AdminServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from '@angular/router';\nimport {RestaurantHomeComponent} from './restaurant-home/restaurant-home.component';\nimport {RestaurantSearchComponent} from './restaurant-search/restaurant-search.component';\nimport {UserLoginComponent} from './user-login/user-login.component';\nimport {UserRegisterComponent} from './user-register/user-register.component';\nimport {OwnerProfilePrivateComponent} from './owner-profile-private/owner-profile-private.component';\nimport {RestaurantDetailComponent} from './restaurant-detail/restaurant-detail.component';\nimport {CriticProfileComponent} from './critic-profile/critic-profile.component';\nimport {CriticProfilePrivateComponent} from './critic-profile-private/critic-profile-private.component';\nimport {PatronProfilePrivateComponent} from './patron-profile-private/patron-profile-private.component';\nimport {PatronProfileComponent} from './patron-profile/patron-profile.component';\nimport {EventCreateComponent} from './event-create/event-create.component';\nimport {EventDetailComponent} from './event-detail/event-detail.component';\nimport {AdminProfilePrivateComponent} from './admin-profile-private/admin-profile-private.component';\nimport {OwnerAllOwnersComponent} from './owner-all-owners/owner-all-owners.component';\nimport {CriticAllCriticsComponent} from './critic-all-critics/critic-all-critics.component';\nimport {PatronAllPatronsComponent} from './patron-all-patrons/patron-all-patrons.component';\nimport {RestaurantAllRestaurantsComponent} from './restaurant-all-restaurants/restaurant-all-restaurants.component';\nimport {EventAllEventsComponent} from './event-all-events/event-all-events.component';\nimport {OwnerProfileComponent} from './owner-profile/owner-profile.component';\nimport {AdminRegisterComponent} from './admin-register/admin-register.component';\nimport {RestaurantUpdateComponent} from './restaurant-update/restaurant-update.component';\nimport {EventUpdateComponent} from './event-update/event-update.component';\nimport {ReviewUpdateComponent} from './review-update/review-update.component';\n\nconst appRoutes: Routes = [\n    {path: '', redirectTo: 'home', pathMatch: 'full'},\n    {path: 'home', component: RestaurantHomeComponent},\n    {path: 'search', component: RestaurantSearchComponent},\n    {path: 'restaurant/:restaurantId', component: RestaurantDetailComponent},\n    {path: 'restaurant/:restaurantId/event', component: EventCreateComponent},\n    {path: 'restaurant/:restaurantId/event/:eventId', component: EventDetailComponent},\n    {path: 'login', component: UserLoginComponent},\n    {path: 'register', component: UserRegisterComponent},\n    {path: 'admin/:adminId/register', component: AdminRegisterComponent},\n    {path: 'profile/admin/:adminId', component: AdminProfilePrivateComponent},\n    {path: 'owner/:ownerId', component: OwnerProfileComponent},\n    {path: 'owner/:ownerId/restaurant/:restaurantId', component: RestaurantUpdateComponent},\n    {path: 'owner/:ownerId/event/:eventId', component: EventUpdateComponent},\n    {path: 'profile/owner/:ownerId', component: OwnerProfilePrivateComponent},\n    {path: 'critic/:criticId', component: CriticProfileComponent},\n    {path: 'critic/:criticId/review/:reviewId', component: ReviewUpdateComponent},\n    {path: 'profile/critic/:criticId', component: CriticProfilePrivateComponent},\n    {path: 'patron/:patronId', component: PatronProfileComponent},\n    {path: 'profile/patron/:patronId', component: PatronProfilePrivateComponent},\n    {path: 'admin/:adminId/owners', component: OwnerAllOwnersComponent},\n    {path: 'admin/:adminId/critics', component: CriticAllCriticsComponent},\n    {path: 'admin/:adminId/patrons', component: PatronAllPatronsComponent},\n    {path: 'admin/:adminId/restaurants', component: RestaurantAllRestaurantsComponent},\n    {path: 'admin/:adminId/events', component: EventAllEventsComponent},\n\n\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <h1>Critics:</h1>\\n\\n\\n    <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let critic of critics\\\">\\n        <li class=\\\"list-group-item\\\">\\n            <div class=\\\"float-left\\\">\\n                <p>Name: {{critic.firstName}} {{critic.lastName}}</p>\\n            </div>\\n            <button (click)=\\\"deleteCritic(critic.id)\\\"\\n                    type=\\\"button\\\" class=\\\"btn btn-danger btn-sm float-right\\\">Delete Critic\\n            </button>\\n            <button (click)=\\\"updateCritic(critic.id)\\\"\\n                    type=\\\"button\\\" class=\\\"btn btn-dark btn-sm float-right btn-group mr-2\\\">Update Critic\\n            </button>\\n        </li>\\n    </ul>\\n\\n    <div>\\n        <button (click)=\\\"goToProfile()\\\" class=\\\"btn btn-link\\\" style=\\\"float: left; color: black\\\">Return to Profile</button>\\n        <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"float: right; color: black\\\">Home</button>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CriticServiceClient} from '../services/critic.service.client';\n\n@Component({\n  selector: 'app-citic-all-critics',\n  templateUrl: './critic-all-critics.component.html',\n  styleUrls: ['./critic-all-critics.component.css']\n})\nexport class CriticAllCriticsComponent implements OnInit {\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private criticService: CriticServiceClient) {\n    this.route.params.subscribe(params => this.loadCritic(params['adminId']));\n  }\n\n\n  adminId;\n\n  critics;\n\n  loadCritic(adminId) {\n    this.adminId = adminId;\n      this.criticService.findAllCritics().then(critics => this.critics = critics);\n  }\n\n  deleteCritic(criticId) {\n      this.criticService.deleteCritic(criticId)\n          .then(() => location.reload());\n  }\n\n  updateCritic(criticId) {\n      this.router.navigate(['profile/critic/' + criticId]);\n  }\n\n\n    goToProfile() {\n        this.router.navigate(['profile/admin/' + this.adminId]);\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n  <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n\\n</div>\\n<br>\\n\\n\\n<div class=\\\"container\\\">\\n  <h1>Profile</h1>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"firstName\\\" placeholder=\\\"first name\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"lastName\\\" placeholder=\\\"last name\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"email\\\" placeholder=\\\"email\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"phone\\\" placeholder=\\\"phone number\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"dob\\\" placeholder=\\\"date of birth (YYYY-MM-DD)\\\" class=\\\"form-control\\\"/>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <button (click)=\\\"update(firstName, lastName, email, phone, dob)\\\"\\n            class=\\\"btn btn-block btn-dark\\\">Update Profile</button>\\n\\n  <h2>Reviews Written</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let review of reviews\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Title: {{review.title}}</p>\\n        <p>Description: {{review.description}}</p>\\n      </div>\\n      <button (click)=\\\"deleteReview(review.id)\\\"\\n               type=\\\"button\\\" class=\\\"btn btn-danger btn-sm float-right\\\">Delete Review\\n    </button>\\n      <button (click)=\\\"updateReview(review.id)\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-dark btn-sm float-right btn-group mr-2\\\">Update Review\\n      </button>\\n    </li>\\n  </ul>\\n\\n  <h2>Followers</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let patron of patrons\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{patron.firstName}} {{patron.lastName}}</p>\\n      </div>\\n      <button (click)=\\\"blockFollower(patron.id)\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-danger btn-sm float-right\\\">Block Follower\\n      </button>\\n    </li>\\n  </ul>\\n\\n  <h2>Followers Blocked</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let blockPatron of blockPatrons\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{blockPatron.firstName}} {{blockPatron.lastName}}</p>\\n      </div>\\n    </li>\\n  </ul>\\n\\n  <h2>Events Attending</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let event of events\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Title: {{event.title}}</p>\\n        <p>Description: {{event.description}}</p>\\n      </div>\\n    </li>\\n  </ul>\\n\\n  <h2>Owners Endorsed</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let endorsement of endorsements\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{endorsement.firstName}} {{endorsement.lastName}}</p>\\n      </div>\\n    </li>\\n  </ul>\\n\\n  <h2>Invitations From Owners</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let invite of invites\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{invite.firstName}} {{invite.lastName}}</p>\\n      </div>\\n    </li>\\n  </ul>\\n\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-block btn-dark\\\">Logout</button>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {ReviewServiceClient} from '../services/review.service.client';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {EventServiceClient} from '../services/event.service.client';\n\n@Component({\n  selector: 'app-critic-profile-private',\n  templateUrl: './critic-profile-private.component.html',\n  styleUrls: ['./critic-profile-private.component.css']\n})\nexport class CriticProfilePrivateComponent implements OnInit {\n\n    constructor(private criticService: CriticServiceClient,\n                private reviewService: ReviewServiceClient,\n                private patronService: PatronServiceClient,\n                private ownerService: OwnerServiceClient,\n                private eventService: EventServiceClient,\n                private router: Router,\n                private route: ActivatedRoute) {\n        this.route.params.subscribe(params => this.loadUser(params['criticId']));\n\n    }\n\n    critic;\n    criticId;\n    username;\n    firstName;\n    lastName;\n    email;\n    phone;\n    dob;\n\n    reviews;\n    patrons;\n    blockPatrons;\n    owners;\n    events;\n    invites;\n    endorsements;\n\n    loadUser(criticId) {\n        this.criticId = criticId;\n        this.criticService.findCriticById(this.criticId)\n            .then(critic => this.loadProfile(critic));\n    }\n\n    loadProfile(user) {\n        this.username = user.username;\n        this.firstName = user.firstName;\n        this.lastName = user.lastName;\n        this.email = user.email;\n        this.phone = user.phone;\n        this.reviewService.findReviewsByCritic(user.id).then(\n            reviews => this.reviews = reviews);\n        this.patronService.findPatronsByCritic(user.id).then(\n            patrons => this.patrons = patrons);\n        this.patronService.findBlockPatronsByCritic(user.id).then(\n            blockPatrons => this.blockPatrons = blockPatrons);\n        this.eventService.findEventsByCritic(user.id).then(\n            events => this.events = events);\n        this.ownerService.findOwnerInvitesByCritic(user.id).then(\n            invites => this.invites = invites);\n        this.ownerService.findOwnerEndorsementsByCritic(user.id).then(\n            endorsements => this.endorsements = endorsements);\n        this.dob = this.styleDate(user.dob);\n    }\n\n    update(firstName, lastName, email, phone, dob) {\n        this.criticService.updateCritic(firstName, lastName, email, phone, dob, this.criticId);\n    }\n\n    logout() {\n        this.router.navigate(['home']);\n    }\n\n    blockFollower(patronId) {\n        this.criticService.addBlockPatron(patronId, this.criticId)\n            .then(() => location.reload());\n    }\n\n    deleteReview(reviewId) {\n        this.reviewService.deleteReview(reviewId)\n            .then(() => location.reload());\n    }\n\n    updateReview(reviewId) {\n        this.router.navigate(['critic/' + this.criticId + '/review/' + reviewId]);\n    }\n\n\n    styleDate(date) {\n     return date.substring(0, 10);\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n    <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n    <h1>{{critic.firstName}} {{critic.lastName}}</h1>\\n    <h2>{{critic.username}}</h2>\\n    <p>{{critic.email}}</p>\\n\\n    <div class=\\\"input-group mb-3\\\">\\n        <input [(ngModel)]=\\\"patronUsername\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"patron username\\\" aria-describedby=\\\"button-addon2\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button (click)=\\\"criticToPatron(patronUsername)\\\"\\n                    class=\\\"btn btn-dark\\\" type=\\\"button\\\" >Follow {{critic.firstName}}</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-group mb-3\\\">\\n        <input [(ngModel)]=\\\"ownerUsername\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\" owner username\\\" aria-describedby=\\\"button-addon2\\\">\\n        <div class=\\\"input-group-append\\\">\\n            <button (click)=\\\"criticToOwner(ownerUsername)\\\"\\n                    class=\\\"btn btn-dark\\\" type=\\\"button\\\" >Invite Critic to Restaurant</button>\\n        </div>\\n    </div>\\n\\n    <h3>Reviews:</h3>\\n\\n    <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let review of reviews\\\">\\n        <li class=\\\"list-group-item\\\">\\n            <p>Title: {{review.title}}</p>\\n            <p>Review: {{review.description}}</p>\\n            <p>Rating: {{review.rating}}</p>\\n        </li>\\n    </ul>\\n\\n    <h3>Followers:</h3>\\n\\n    <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let patron of patrons\\\">\\n        <li class=\\\"list-group-item\\\">\\n            <p>Name: {{patron.firstName}} {{patron.lastName}}</p>\\n        </li>\\n    </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {ReviewServiceClient} from '../services/review.service.client';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {OwnerServiceClient} from '../services/owner.service.client';\n\n@Component({\n  selector: 'app-critic-profile',\n  templateUrl: './critic-profile.component.html',\n  styleUrls: ['./critic-profile.component.css']\n})\nexport class CriticProfileComponent implements OnInit {\n\n  constructor(private criticService: CriticServiceClient,\n              private reviewService: ReviewServiceClient,\n              private patronService: PatronServiceClient,\n              private ownerService: OwnerServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n      this.route.params.subscribe(params => this.loadCritic(params['criticId']));\n  }\n\n  criticId;\n  critic;\n\n  reviews;\n\n  patronUsername = null;\n  patrons;\n\n  ownerUsername = null;\n\n  loadCritic(criticId) {\n          this.criticId = criticId;\n          this.criticService.findCriticById(criticId)\n              .then(critic => this.loadCriticProfile(critic));\n  }\n\n  loadCriticProfile(critic) {\n    this.critic = critic;\n      this.reviewService.findReviewsByCritic(critic.id).then(\n          reviews => this.reviews = reviews);\n      this.patronService.findPatronsByCritic(critic.id).then(\n      patrons => this.patrons = patrons);\n  }\n\n  criticToPatron(patronUsername) {\n    if (patronUsername === null) {\n      alert('Please enter a username');\n      return;\n    }\n    this.patronService.findPatronByUsername(patronUsername)\n        .then(patron => this.patronService.criticToPatron(patron.id, this.criticId))\n        .then(() => location.reload())\n        .catch(() => alert('Must be logged in as Patron'));\n  }\n\n  criticToOwner(ownerUsername) {\n      if (ownerUsername === null) {\n          alert('Please enter a username');\n          return;\n      }\n    this.ownerService.findOwnerByUsername(ownerUsername)\n        .then(owner => this.ownerService.addCriticInviteToOwner(owner.id, this.criticId))\n        .then( () => alert('Invite Sent!'))\n        .catch(() => alert('Must be logged in as Owner'));\n  }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Events:</h1>\\n\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let event of events\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Title: {{event.title}}</p>\\n      </div>\\n      <button (click)=\\\"deleteEvent(event.id)\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-danger btn-sm float-right\\\">Delete Event\\n      </button>\\n    </li>\\n  </ul>\\n\\n  <div>\\n    <button (click)=\\\"goToProfile()\\\" class=\\\"btn btn-link\\\" style=\\\"float: left; color: black\\\">Return to Profile</button>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"float: right; color: black\\\">Home</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {EventServiceClient} from '../services/event.service.client';\n\n@Component({\n  selector: 'app-event-all-events',\n  templateUrl: './event-all-events.component.html',\n  styleUrls: ['./event-all-events.component.css']\n})\nexport class EventAllEventsComponent implements OnInit {\n\n    constructor(private router: Router,\n                private route: ActivatedRoute,\n                private eventService: EventServiceClient) {\n        this.route.params.subscribe(params => this.loadEvent(params['adminId']));\n    }\n\n\n    adminId;\n\n    events;\n\n    loadEvent(adminId) {\n        this.adminId = adminId;\n        this.eventService.findAllEvents().then(events => this.events = events);\n    }\n\n    deleteEvent(eventId) {\n        this.eventService.deleteEvent(eventId)\n            .then(() => location.reload());\n    }\n\n    goToProfile() {\n        this.router.navigate(['profile/admin/' + this.adminId]);\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n    <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n\\n</div>\\n<br>\\n\\n<div class=\\\"container\\\">\\n    <h3>Create an Event!</h3>\\n\\n    <div>\\n        <div class=\\\"form-group\\\">\\n            <label>Username</label>\\n            <input [(ngModel)]=\\\"ownerUsername\\\" class=\\\"form-control\\\"/>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"FormControlInput2\\\">Event Title</label>\\n            <input class=\\\"form-control\\\" id=\\\"FormControlInput2\\\" [(ngModel)]=\\\"eventTitle\\\"/>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"FormControlTextarea1\\\">Event Description</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"FormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"eventDescription\\\">\\n            </textarea>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"FormControlInput3\\\">Event Date and Time</label>\\n            <input class=\\\"form-control\\\" id=\\\"FormControlInput3\\\" [(ngModel)]=\\\"eventDateTime\\\"/>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"FormControlInput4\\\">Event Price</label>\\n            <input class=\\\"form-control\\\" id=\\\"FormControlInput4\\\" [(ngModel)]=\\\"eventPrice\\\"/>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"FormControlInput5\\\">Event Attire</label>\\n            <input class=\\\"form-control\\\" id=\\\"FormControlInput5\\\" [(ngModel)]=\\\"eventAttire\\\"/>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <button (click)=\\\"createEvent(eventTitle, eventDescription, eventDateTime, eventPrice, eventAttire, ownerUsername)\\\"\\n                    class=\\\"btn btn-block btn-dark\\\">Create Event\\n            </button>\\n\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {EventServiceClient} from '../services/event.service.client';\n\n@Component({\n  selector: 'app-event-create',\n  templateUrl: './event-create.component.html',\n  styleUrls: ['./event-create.component.css']\n})\nexport class EventCreateComponent implements OnInit {\n\n  constructor(private ownerService: OwnerServiceClient,\n              private eventService: EventServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n      this.route.params.subscribe(params => this.loadRestaurant(params['restaurantId']));\n  }\n\n  restaurantId;\n\n  ownerUsername = null;\n  eventTitle;\n  eventDescription;\n  eventDateTime;\n  eventPrice;\n  eventAttire;\n\n  loadRestaurant(restaurantId) {\n    this.restaurantId = restaurantId;\n  }\n\n    createEvent(eventTitle, eventDescription, eventDateTime, eventPrice, eventAttire, ownerUsername) {\n    if (ownerUsername === null) {\n      alert('Please enter username');\n      return;\n    }\n    this.ownerService.findOwnerByUsername(ownerUsername)\n        .then(owner => this.eventService.createEvent(\n            eventTitle, eventDescription, eventDateTime, eventPrice, eventAttire, owner.id, this.restaurantId))\n        .then(() => (this.router.navigate(['restaurant/' + this.restaurantId])))\n        .catch(() => 'Must be logged in as User');\n  }\n\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n  <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n  <h1>{{event.title}}</h1>\\n  <h3>{{event.description}}</h3>\\n\\n  <h5>Price: {{event.price}}</h5>\\n  <h5>Date: {{event.dateTime}}</h5>\\n  <h5>Attire: {{event.attire}}</h5>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <input [(ngModel)]=\\\"patronUsername\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"patron username\\\" aria-describedby=\\\"button-addon2\\\">\\n    <div class=\\\"input-group-append\\\">\\n      <button (click)=\\\"addEventToPatron(patronUsername)\\\"\\n              class=\\\"btn btn-dark\\\" type=\\\"button\\\" >Attend as Patron</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <input [(ngModel)]=\\\"criticUsernameI\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"critic username\\\" aria-describedby=\\\"button-addon2\\\">\\n    <div class=\\\"input-group-append\\\">\\n      <button (click)=\\\"addEventToCritic(criticUsernameI)\\\"\\n              class=\\\"btn btn-dark\\\" type=\\\"button\\\" >Attend as Critic</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <button\\n            (click)=\\\"goToOwner()\\\" class=\\\"btn btn-block btn-dark\\\">View Host\\n    </button>\\n  </div>\\n\\n  <h3>Patron Attendees:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let patron of patrons\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{patron.firstName}} {{patron.lastName}}</p>\\n    </li>\\n  </ul>\\n\\n  <h3>Critic Attendees:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let critic of critics\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{critic.firstName}} {{critic.lastName}}</p>\\n    </li>\\n  </ul>\\n\\n  <h3>Write a Review!</h3>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Username</label>\\n      <input [(ngModel)]=\\\"criticUsername\\\" class=\\\"form-control\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"FormControlInput2\\\">Review Title</label>\\n      <input class=\\\"form-control\\\" id=\\\"FormControlInput2\\\" [(ngModel)]=\\\"reviewTitle\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"FormControlTextarea1\\\">Review Description</label>\\n      <textarea class=\\\"form-control\\\" id=\\\"FormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"reviewDescription\\\">\\n\\n            </textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Restaurant Rating</label>\\n\\n      <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n          <button (click)=\\\"setRating(1)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">1</button>\\n        </div>\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Second group\\\">\\n          <button (click)=\\\"setRating(2)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">2</button>\\n        </div>\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Third group\\\">\\n          <button (click)=\\\"setRating(3)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">3</button>\\n        </div>\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Fourth group\\\">\\n          <button (click)=\\\"setRating(4)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">4</button>\\n        </div>\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Fifth group\\\">\\n          <button (click)=\\\"setRating(5)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">5</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button (click)=\\\"addReviewForEvent(reviewTitle, reviewDescription, criticUsername)\\\"\\n              class=\\\"btn btn-block btn-dark\\\">Add\\n        Review\\n      </button>\\n    </div>\\n\\n  <h3>Reviews:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let review of reviews\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Title: {{review.title}}</p>\\n      <p>Description: {{review.description}}</p>\\n      <p>Rating: {{review.rating}}</p>\\n    </li>\\n  </ul>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {EventServiceClient} from '../services/event.service.client';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {ReviewServiceClient} from '../services/review.service.client';\n\n@Component({\n  selector: 'app-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.css']\n})\nexport class EventDetailComponent implements OnInit {\n\n    constructor(private criticService: CriticServiceClient,\n                private patronService: PatronServiceClient,\n                private eventService: EventServiceClient,\n                private ownerService: OwnerServiceClient,\n                private reviewService: ReviewServiceClient,\n                private router: Router,\n                private route: ActivatedRoute) {\n        this.route.params.subscribe(params => this.loadEvent(params['eventId']));\n    }\n\n    critics;\n    criticUsernameI = null;\n    criticUsername = null;\n\n    patrons;\n    patronUsername = null;\n\n    reviews;\n    reviewTitle;\n    reviewDescription;\n    reviewRating;\n\n\n    event;\n    eventId;\n\n    ownerId;\n\n    loadEvent(eventId) {\n        this.eventId = eventId;\n        this.eventService.findEventById(eventId)\n            .then(event => this.loadEventProfile(event));\n    }\n\n    loadEventProfile(event) {\n        this.event = event;\n        this.ownerService.findOwnerByEvent(event.id).then(\n            owner => this.ownerId = owner.id);\n        this.patronService.findPatronsByEvent(event.id).then(\n            patrons => this.patrons = patrons);\n        this.criticService.findCriticsByEvent(event.id).then(\n            critics => this.critics = critics);\n        this.reviewService.findReviewsByEvent(event.id).then(\n            reviews => this.reviews = reviews);\n    }\n\n    addReviewForEvent(reviewTitle, reviewDescription, criticUsername) {\n        if (this.criticUsername === null) {\n            alert('Please enter a username');\n            return;\n        }\n        this.criticService.findCriticByUsername(criticUsername)\n            .then(critic => this.reviewService\n                .addReviewForEvent(reviewTitle, reviewDescription, this.reviewRating, critic.id, this.eventId))\n            .then(() => location.reload())\n            .catch(() => alert('Must be logged in as Critic'));\n    }\n\n    addEventToPatron(patronUsername) {\n        if (patronUsername === null) {\n            alert('Please enter username');\n            return;\n        }\n        this.patronService.findPatronByUsername(patronUsername)\n            .then(patron => this.patronService.addEventToPatron(this.eventId, patron.id))\n            .then(() => location.reload())\n            .catch(() => alert('Must be logged in as Patron'));\n    }\n\n    addEventToCritic(criticUsernameI) {\n        if (criticUsernameI === null) {\n            alert('Please enter username');\n            return;\n        }\n        this.criticService.findCriticByUsername(criticUsernameI)\n            .then(critic => this.criticService.addEventToCritic(this.eventId, critic.id))\n            .then(() => location.reload())\n            .catch(() => alert('Must be logged in as Critic'));\n        ;\n    }\n\n    goToOwner() {\n        this.router.navigate(['owner/' + this.ownerId]);\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n\n    setRating(rating) {\n        this.reviewRating = rating;\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n  <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n\\n</div>\\n<br>\\n\\n<div class=\\\"container\\\">\\n  <h3>Update an Event</h3>\\n\\n  <div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"FormControlInput2\\\">Event Title</label>\\n      <input class=\\\"form-control\\\" id=\\\"FormControlInput2\\\" [(ngModel)]=\\\"eventTitle\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"FormControlTextarea1\\\">Event Description</label>\\n      <textarea class=\\\"form-control\\\" id=\\\"FormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"eventDescription\\\">\\n            </textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"FormControlInput3\\\">Event Date and Time</label>\\n      <input class=\\\"form-control\\\" id=\\\"FormControlInput3\\\" [(ngModel)]=\\\"eventDateTime\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"FormControlInput4\\\">Event Price</label>\\n      <input class=\\\"form-control\\\" id=\\\"FormControlInput4\\\" [(ngModel)]=\\\"eventPrice\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"FormControlInput5\\\">Event Attire</label>\\n      <input class=\\\"form-control\\\" id=\\\"FormControlInput5\\\" [(ngModel)]=\\\"eventAttire\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <button (click)=\\\"updateEvent(eventTitle, eventDescription, eventDateTime, eventPrice, eventAttire, ownerUsername)\\\"\\n              class=\\\"btn btn-block btn-dark\\\">Update Event\\n      </button>\\n      <button (click)=\\\"returnToProfile()\\\"\\n              class=\\\"btn btn-block btn-dark\\\">Return to Profile\\n      </button>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {RestaurantServiceClient} from '../services/restaurant.service.client';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {EventServiceClient} from '../services/event.service.client';\n\n@Component({\n  selector: 'app-event-update',\n  templateUrl: './event-update.component.html',\n  styleUrls: ['./event-update.component.css']\n})\nexport class EventUpdateComponent implements OnInit {\n\n    constructor(private ownerService: OwnerServiceClient,\n                private eventService: EventServiceClient,\n                private router: Router,\n                private route: ActivatedRoute) {\n        this.route.params.subscribe(params => this.loadOwnerEvent(params['ownerId'], params['eventId']));\n    }\n\n    ownerId;\n\n    eventId;\n\n    eventTitle;\n    eventDescription;\n    eventDateTime;\n    eventPrice;\n    eventAttire;\n\n    loadOwnerEvent(ownerId, eventId) {\n        this.ownerId = ownerId;\n        this.eventId = eventId;\n        this.eventService.findEventById(this.eventId)\n            .then(event => this.loadEvent(event));\n    }\n\n    loadEvent(event) {\n        this.eventTitle = event.title;\n        this.eventDescription = event.description;\n        this.eventDateTime = event.DateTime;\n        this.eventPrice = event.price;\n        this.eventAttire = event.attire;\n    }\n\n    updateEvent(eventTitle, eventDescription, eventDateTime, eventPrice, eventAttire) {\n        this.eventService.updateEvent(eventTitle, eventDescription, eventDateTime,\n            eventPrice, eventAttire, this.eventId);\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n    returnToProfile() {\n        this.router.navigate(['profile/owner/' + this.ownerId]);\n    }\n\n    ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Owners:</h1>\\n\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let owner of owners\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{owner.firstName}} {{owner.lastName}}</p>\\n      </div>\\n      <button (click)=\\\"deleteOwner(owner.id)\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-danger btn-sm float-right\\\">Delete Owner\\n      </button>\\n      <button (click)=\\\"updateOwner(owner.id)\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-dark btn-sm float-right btn-group mr-2\\\">Update Owner\\n      </button>\\n\\n    </li>\\n  </ul>\\n\\n  <div>\\n    <button (click)=\\\"goToProfile()\\\" class=\\\"btn btn-link\\\" style=\\\"float: left; color: black\\\">Return to Profile</button>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"float: right; color: black\\\">Home</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {OwnerServiceClient} from '../services/owner.service.client';\n\n@Component({\n  selector: 'app-owner-all-owners',\n  templateUrl: './owner-all-owners.component.html',\n  styleUrls: ['./owner-all-owners.component.css']\n})\nexport class OwnerAllOwnersComponent implements OnInit {\n\n    constructor(private router: Router,\n                private route: ActivatedRoute,\n                private ownerService: OwnerServiceClient) {\n        this.route.params.subscribe(params => this.loadOwner(params['ownerId']));\n    }\n\n\n    adminId;\n\n    owners;\n\n    loadOwner(adminId) {\n        this.adminId = adminId;\n        this.ownerService.findAllOwners().then(owners => this.owners = owners);\n    }\n\n    deleteOwner(ownerId) {\n        this.ownerService.deleteOwner(ownerId)\n            .then(() => location.reload());\n    }\n\n    updateOwner(ownerId) {\n        this.router.navigate(['profile/owner/' + ownerId]);\n    }\n\n    goToProfile() {\n        this.router.navigate(['profile/admin/' + this.adminId]);\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n  <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n  <h1>Profile</h1>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"firstName\\\" placeholder=\\\"first name\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"lastName\\\" placeholder=\\\"last name\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"email\\\" placeholder=\\\"email\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"phone\\\" placeholder=\\\"phone number\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"dob\\\" placeholder=\\\"date of birth (YYYY-MM-DD)\\\" class=\\\"form-control\\\"/>\\n  </div>\\n\\n\\n  <div class=\\\"form-group\\\">\\n    <button (click)=\\\"update(firstName, lastName, email, phone, dob)\\\"\\n            class=\\\"btn btn-block btn-dark\\\">Update Profile</button>\\n  </div>\\n\\n  <h3>Create Restaurant</h3>\\n\\n  <div>\\n    <div class=\\\"form-group\\\">\\n      <input [(ngModel)]=\\\"restaurantName\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input class=\\\"form-control\\\" id=\\\"FormControlInput2\\\" [(ngModel)]=\\\"restaurantAddress\\\" placeholder=\\\"Address\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input class=\\\"form-control\\\" id=\\\"FormControlInput3\\\" [(ngModel)]=\\\"restaurantCity\\\" placeholder=\\\"City\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input class=\\\"form-control\\\" id=\\\"FormControlInput4\\\" [(ngModel)]=\\\"restaurantState\\\" placeholder=\\\"State\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n    <input class=\\\"form-control\\\" id=\\\"FormControlInput5\\\" [(ngModel)]=\\\"restaurantPhone\\\" placeholder=\\\"Phone\\\"/>\\n  </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Price</label>\\n\\n      <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n          <button (click)=\\\"setPrice($)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">$</button>\\n        </div>\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Second group\\\">\\n          <button (click)=\\\"setPrice($$)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">$$</button>\\n        </div>\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Third group\\\">\\n          <button (click)=\\\"setPrice($$$)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">$$$</button>\\n        </div>\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Fourth group\\\">\\n          <button (click)=\\\"setPrice($$$$)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">$$$$</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <button (click)=\\\"addRestaurantWithOwner(restaurantName, restaurantAddress, restaurantCity, restaurantState, restaurantPhone)\\\"\\n              class=\\\"btn btn-block btn-dark\\\">Create Restaurant\\n      </button>\\n    </div>\\n\\n  <h3>Restaurants:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let restaurant of restaurants\\\">\\n    <li class=\\\"list-group-item\\\">\\n        <div class=\\\"float-left\\\">\\n      <p>Name: {{restaurant.name}}</p>\\n        </div>\\n        <button (click)=\\\"deleteRestaurant(restaurant.id)\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-danger btn-sm float-right\\\">Delete Restaurant\\n        </button>\\n        <button (click)=\\\"updateRestaurant(restaurant.id)\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-dark btn-sm float-right btn-group mr-2\\\">Update Restaurant\\n        </button>\\n\\n    </li>\\n  </ul>\\n\\n\\n  <h3>Events:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let event of events\\\">\\n    <li class=\\\"list-group-item\\\">\\n        <div class=\\\"float-left\\\">\\n\\n        <p>Title: {{event.title}}</p>\\n      <p>Description: {{event.description}}</p>\\n        </div>\\n        <button (click)=\\\"deleteEvent(event.id)\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-danger btn-sm float-right\\\">Delete Event\\n        </button>\\n        <button (click)=\\\"updateEvent(event.id)\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-dark btn-sm float-right btn-group mr-2\\\">Update Event\\n        </button>\\n\\n    </li>\\n  </ul>\\n\\n  <h3>Endorsements By Patrons:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let patronEndorsement of patronEndorsements\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{patronEndorsement.firstName}} {{patronEndorsement.lastName}}</p>\\n    </li>\\n  </ul>\\n\\n  <h3>Endorsements By Critics:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let criticEndorsement of criticEndorsements\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{criticEndorsement.firstName}} {{criticEndorsement.lastName}}</p>\\n    </li>\\n  </ul>\\n</div>\\n\\n  <h3>Invites to Patrons:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let patronInvite of patronInvites\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{patronInvite.firstName}} {{patronInvite.lastName}}</p>\\n    </li>\\n  </ul>\\n\\n  <h3>Invites to Critics:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let criticInvite of criticInvites\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{criticInvite.firstName}} {{criticInvite.lastName}}</p>\\n    </li>\\n  </ul>\\n\\n  <div class=\\\"form-group\\\">\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-block btn-dark\\\">Logout</button>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {EventServiceClient} from '../services/event.service.client';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {RestaurantServiceClient} from '../services/restaurant.service.client';\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './owner-profile-private.component.html',\n    styleUrls: ['./owner-profile-private.component.css']\n})\nexport class OwnerProfilePrivateComponent implements OnInit {\n\n    constructor(private ownerService: OwnerServiceClient,\n                private eventService: EventServiceClient,\n                private patronService: PatronServiceClient,\n                private criticService: CriticServiceClient,\n                private restaurantService: RestaurantServiceClient,\n                private router: Router,\n                private route: ActivatedRoute) {\n        this.route.params.subscribe(params => this.loadOwner(params['ownerId']));\n    }\n\n    user;\n    ownerId;\n    username;\n    firstName;\n    lastName;\n    email;\n    phone;\n    dob;\n\n    restaurants;\n    restaurantName;\n    restaurantAddress;\n    restaurantCity;\n    restaurantState;\n    restaurantPhone;\n    price;\n\n    events;\n\n    patrons;\n    patronEndorsements;\n    patronInvites;\n\n    critics;\n    criticEndorsements;\n    criticInvites;\n\n    loadOwner(ownerId) {\n        this.ownerId = ownerId;\n        this.ownerService.findOwnerById(this.ownerId)\n            .then(user => this.loadProfile(user));\n    }\n\n    loadProfile(owner) {\n        this.username = owner.username;\n        this.firstName = owner.firstName;\n        this.lastName = owner.lastName;\n        this.email = owner.email;\n        this.phone = owner.phone;\n        this.restaurantService.findRestaurantsByOwner(owner.id).then(\n            restaurants => this.restaurants = restaurants);\n        this.eventService.findEventsByOwner(owner.id).then(\n            events => this.events = events);\n        this.patronService.findPatronsByOwner(owner.id).then(\n            patronEndorsements => this.patronEndorsements = patronEndorsements);\n        this.criticService.findCriticsByOwner(owner.id).then(\n            criticEndorsements => this.criticEndorsements = criticEndorsements);\n        this.patronService.findPatronInvitesByOwner(owner.id).then(\n            patronInvites => this.patronInvites = patronInvites);\n        this.criticService.findCriticInvitesByOwner(owner.id).then(\n            criticInvites => this.criticInvites = criticInvites);\n\n        this.dob = this.styleDate(owner.dob);\n    }\n\n    update(firstName, lastName, email, phone, dob) {\n        this.ownerService.updateOwner(firstName, lastName, email, phone, dob, this.ownerId);\n    }\n\n    addRestaurantWithOwner(name, address, city, state, phone) {\n        this.restaurantService.addRestaurantWithOwner(name, address, city, state, phone, this.price, this.ownerId)\n            .then(() => location.reload());\n    }\n\n    deleteRestaurant(restaurantId) {\n        this.restaurantService.deleteRestaurant(restaurantId)\n            .then(() => location.reload());\n    }\n\n    updateRestaurant(restaurantId) {\n        this.router.navigate(['owner/' + this.ownerId + '/restaurant/' + restaurantId]);\n    }\n\n    deleteEvent(eventId) {\n        this.eventService.deleteEvent(eventId)\n            .then(() => location.reload());\n    }\n\n    updateEvent(eventId) {\n        this.router.navigate(['owner/' + this.ownerId + '/event/' + eventId]);\n    }\n\n    logout() {\n        this.router.navigate(['home']);\n    }\n\n    styleDate(date) {\n        return date.substring(0, 10);\n    }\n\n    setPrice(price) {\n        this.price = price;\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n  <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n  <h1>{{owner.firstName}} {{owner.lastName}}</h1>\\n  <h2>{{owner.username}}</h2>\\n  <p>{{owner.email}}</p>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <input [(ngModel)]=\\\"patronUsername\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"patron username\\\" aria-describedby=\\\"button-addon2\\\">\\n    <div class=\\\"input-group-append\\\">\\n      <button (click)=\\\"ownerToPatron(patronUsername)\\\"\\n              class=\\\"btn btn-dark\\\" type=\\\"button\\\" >Endorse as Patron</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <input [(ngModel)]=\\\"criticUsername\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"critic username\\\" aria-describedby=\\\"button-addon2\\\">\\n    <div class=\\\"input-group-append\\\">\\n      <button (click)=\\\"ownerToCritic(criticUsername)\\\"\\n              class=\\\"btn btn-dark\\\" type=\\\"button\\\" >Endorse as Critic</button>\\n    </div>\\n  </div>\\n\\n  <h3>Restaurants:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let restaurant of restaurants\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{restaurant.name}}</p>\\n    </li>\\n  </ul>\\n\\n\\n  <h3>Events:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let event of events\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Title: {{event.title}}</p>\\n      <p>Description: {{event.description}}</p>\\n    </li>\\n  </ul>\\n\\n  <h3>Endorsements By Patrons:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let patronEndorsement of patronEndorsements\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{patronEndorsement.firstName}} {{patronEndorsement.lastName}}</p>\\n    </li>\\n  </ul>\\n\\n  <h3>Endorsements By Critics:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let criticEndorsement of criticEndorsements\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{criticEndorsement.firstName}} {{criticEndorsement.lastName}}</p>\\n    </li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ReviewServiceClient} from '../services/review.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {EventServiceClient} from '../services/event.service.client';\nimport {cr} from '@angular/core/src/render3';\nimport {RestaurantServiceClient} from '../services/restaurant.service.client';\n\n@Component({\n  selector: 'app-owner-profile',\n  templateUrl: './owner-profile.component.html',\n  styleUrls: ['./owner-profile.component.css']\n})\nexport class OwnerProfileComponent implements OnInit {\n\n    constructor(private ownerService: OwnerServiceClient,\n                private eventService: EventServiceClient,\n                private patronService: PatronServiceClient,\n                private criticService: CriticServiceClient,\n                private restaurantService: RestaurantServiceClient,\n                private router: Router,\n                private route: ActivatedRoute) {\n        this.route.params.subscribe(params => this.loadOwner(params['ownerId']));\n    }\n\n    ownerId;\n    owner;\n\n    events;\n    restaurants;\n\n    patronUsername = null;\n    patrons;\n    patronEndorsements;\n\n    criticUsername = null;\n    critics;\n    criticEndorsements;\n\n    ownerUsername;\n\n    loadOwner(ownerId) {\n        this.ownerId = ownerId;\n        this.ownerService.findOwnerById(ownerId)\n            .then(owner => this.loadOwnerProfile(owner));\n    }\n\n    loadOwnerProfile(owner) {\n        this.owner = owner;\n        this.eventService.findEventsByOwner(owner.id).then(\n            events => this.events = events);\n        this.patronService.findPatronsByOwner(owner.id).then(\n            patronEndorsements => this.patronEndorsements = patronEndorsements);\n        this.criticService.findCriticsByOwner(owner.id).then(\n            criticEndorsements => this.criticEndorsements = criticEndorsements);\n        this.restaurantService.findRestaurantsByOwner(owner.id).then(\n            retaurants => this.restaurants = retaurants);\n    }\n\n    ownerToPatron(patronUsername) {\n        if (patronUsername === null) {\n            alert('Please enter username');\n            return;\n        }\n        this.patronService.findPatronByUsername(patronUsername)\n            .then(patron => this.patronService.addOwnerToPatronEndorsed(this.ownerId, patron.id))\n            .then(() => location.reload())\n            .catch(() => alert('Must be logged in as Patron'));\n    }\n\n    ownerToCritic(criticUsername) {\n        if (criticUsername === null) {\n            alert('Please enter username');\n            return;\n        }\n        this.criticService.findCriticByUsername(criticUsername)\n            .then(critic => this.criticService.addOwnerToCriticEndorsed(this.ownerId, critic.id))\n            .then(() => location.reload())\n            .catch(() => alert('Must be logged in as Critic'));\n\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Patrons:</h1>\\n\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let patron of patrons\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{patron.firstName}} {{patron.lastName}}</p>\\n      </div>\\n      <button (click)=\\\"deletePatron(patron.id)\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-danger btn-sm float-right\\\">Delete Patron\\n      </button>\\n      <button (click)=\\\"updatePatron(patron.id)\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-dark btn-sm float-right btn-group mr-2\\\">Update Patron\\n      </button>\\n    </li>\\n  </ul>\\n\\n  <div>\\n    <button (click)=\\\"goToProfile()\\\" class=\\\"btn btn-link\\\" style=\\\"float: left; color: black\\\">Return to Profile</button>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"float: right; color: black\\\">Home</button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PatronServiceClient} from '../services/patron.service.client';\n\n@Component({\n  selector: 'app-patron-all-patrons',\n  templateUrl: './patron-all-patrons.component.html',\n  styleUrls: ['./patron-all-patrons.component.css']\n})\nexport class PatronAllPatronsComponent implements OnInit {\n\n    constructor(private router: Router,\n                private route: ActivatedRoute,\n                private patronService: PatronServiceClient) {\n        this.route.params.subscribe(params => this.loadPatron(params['adminId']));\n    }\n\n\n    adminId;\n\n    patrons;\n\n    loadPatron(adminId) {\n        this.adminId = adminId;\n        this.patronService.findAllPatrons().then(patrons => this.patrons = patrons);\n    }\n\n    deletePatron(patronId) {\n        this.patronService.deletePatron(patronId)\n            .then(() => location.reload());\n    }\n\n    updatePatron(patronId) {\n        this.router.navigate(['profile/patron/' + patronId]);\n    }\n\n    goToProfile() {\n        this.router.navigate(['profile/admin/' + this.adminId]);\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n  <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <h1>Profile</h1>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"firstName\\\" placeholder=\\\"first name\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"lastName\\\" placeholder=\\\"last name\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"email\\\" placeholder=\\\"email\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"phone\\\" placeholder=\\\"phone number\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"dob\\\" placeholder=\\\"date of birth (YYYY-MM-DD)\\\" class=\\\"form-control\\\"/>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n  <button (click)=\\\"update(firstName, lastName, email, phone, dob)\\\"\\n          class=\\\"btn btn-block btn-dark\\\">Update Profile</button>\\n  </div>\\n\\n  <h2>Restaurants Visited</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let restaurant of restaurants\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{restaurant.name}}</p>\\n      </div>\\n    </li>\\n  </ul>\\n\\n  <h2>Favorite Critic</h2>\\n  <p>Name: {{favoriteCritic.firstName}} {{favoriteCritic.lastName}}</p>\\n\\n  <h2>Critics Followed</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let critic of critics\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{critic.firstName}} {{critic.lastName}}</p>\\n      </div>\\n      <button (click)=\\\"addFavoriteCritic(critic.id)\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-primary btn-sm float-right\\\">Favorite\\n      </button>\\n    </li>\\n  </ul>\\n\\n  <h2>Events Attending</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let event of events\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Title: {{event.title}}</p>\\n        <p>Description: {{event.description}}</p>\\n      </div>\\n    </li>\\n  </ul>\\n\\n  <h2>Invitations from Owners</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let invite of invites\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{invite.firstName}} {{invite.lastName}}</p>\\n      </div>\\n    </li>\\n  </ul>\\n\\n  <h2>Owners Endorsed</h2>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let endorsement of endorsements\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{endorsement.firstName}} {{endorsement.lastName}}</p>\\n      </div>\\n    </li>\\n  </ul>\\n\\n  <div class=\\\"form-group\\\">\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-block btn-dark\\\">Logout</button>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {EventServiceClient} from '../services/event.service.client';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {RestaurantServiceClient} from '../services/restaurant.service.client';\nimport {OwnerServiceClient} from '../services/owner.service.client';\n\n@Component({\n  selector: 'app-patron-profile-component',\n  templateUrl: './patron-profile-private.component.html',\n  styleUrls: ['./patron-profile-private.component.css']\n})\nexport class PatronProfilePrivateComponent implements OnInit {\n\n    constructor(private patronService: PatronServiceClient,\n                private restaurantService: RestaurantServiceClient,\n                private eventService: EventServiceClient,\n                private criticService: CriticServiceClient,\n                private ownerService: OwnerServiceClient,\n                private router: Router,\n                private route: ActivatedRoute) {\n        this.route.params.subscribe(params => this.loadUser(params['patronId']));\n    }\n\n    user;\n    userId;\n    username;\n    firstName;\n    lastName;\n    email;\n    phone;\n    dob;\n\n    restaurants;\n    critics;\n    favoriteCritic;\n    events;\n    invites;\n    endorsements;\n\n    loadUser(patronId) {\n        this.userId = patronId;\n        this.patronService.findPatronById(this.userId)\n            .then(user => this.loadProfile(user));\n    }\n\n    loadProfile(user) {\n        this.username = user.username;\n        this.firstName = user.firstName;\n        this.lastName = user.lastName;\n        this.email = user.email;\n        this.phone = user.phone;\n        this.patronService.findFavoriteCritic(user.id).then(\n            favoriteCritic => this.favoriteCritic = favoriteCritic);\n        this.restaurantService.findRestaurantsByPatron(user.id).then(\n            restaurants => this.restaurants = restaurants);\n        this.criticService.findCriticsByPatron(user.id).then(\n            critics => this.critics = critics);\n        this.eventService.findEventsByPatron(user.id).then(\n            events => this.events = events);\n        this.ownerService.findOwnerInvitesByPatron(user.id).then(\n            invites => this.invites = invites);\n        this.ownerService.findOwnerEndorsementsByPatron(user.id).then(\n            endorsements => this.endorsements = endorsements);\n        this.dob = this.styleDate(user.dob);\n\n    }\n\n    update(firstName, lastName, email, phone, dob) {\n        this.patronService.updatePatron(firstName, lastName, email, phone, dob, this.userId)\n    }\n\n    addFavoriteCritic(criticId) {\n        this.patronService.addFavoriteCritic(criticId, this.userId)\n            .then(() => location.reload());\n    }\n\n    logout() {\n        this.router.navigate(['home']);\n    }\n\n    styleDate(date) {\n        return date.substring(0, 10);\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"form-group\\\">\\n  <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n  <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n  <br>\\n  <br>\\n</div>\\n\\n<br>\\n<br>\\n\\n<div class=\\\"container\\\">\\n  <h1>{{patron.firstName}} {{patron.lastName}}</h1>\\n  <h2>{{patron.username}}</h2>\\n  <p>{{patron.email}}</p>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <input [(ngModel)]=\\\"ownerUsername\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"owner username\\\" aria-describedby=\\\"button-addon2\\\">\\n    <div class=\\\"input-group-append\\\">\\n      <button (click)=\\\"patronToOwner(ownerUsername)\\\"\\n              class=\\\"btn btn-dark\\\" type=\\\"button\\\" >Invite Patron to Restaurant</button>\\n    </div>\\n  </div>\\n\\n  <h3>Restaurants Visited:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let restaurant of restaurants\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{restaurant.name}}</p>\\n      <p>Address: {{restaurant.city}}</p>\\n    </li>\\n  </ul>\\n\\n  <h3>Critics Followed:</h3>\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let critic of critics\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <p>Name: {{critic.firstName}} {{critic.lastName}}</p>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {RestaurantServiceClient} from '../services/restaurant.service.client';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {OwnerServiceClient} from '../services/owner.service.client';\n\n@Component({\n  selector: 'app-patron-profile',\n  templateUrl: './patron-profile.component.html',\n  styleUrls: ['./patron-profile.component.css']\n})\nexport class PatronProfileComponent implements OnInit {\n\n    constructor(private patronService: PatronServiceClient,\n                private restaurantService: RestaurantServiceClient,\n                private criticService: CriticServiceClient,\n                private ownerService: OwnerServiceClient,\n                private router: Router,\n                private route: ActivatedRoute) {\n        this.route.params.subscribe(params => this.loadPatron(params['patronId']));\n    }\n\n    ownerUsername = null;\n\n    patronId;\n    patron;\n\n    restaurants;\n    critics;\n\n    loadPatron(patronId) {\n        this.patronId = patronId;\n        this.patronService.findPatronById(patronId)\n            .then(critic => this.loadPatronProfile(critic));\n    }\n\n    loadPatronProfile(patron) {\n        this.patron = patron;\n        this.restaurantService.findRestaurantsByPatron(patron.id).then(\n            restaurants => this.restaurants = restaurants);\n        this.criticService.findCriticsByPatron(patron.id).then(\n            critics => this.critics = critics);\n    }\n\n    patronToOwner(ownerUsername) {\n        if (ownerUsername === null) {\n            alert('Please enter a username');\n            return;\n        }\n        this.ownerService.findOwnerByUsername(ownerUsername)\n            .then(owner => this.ownerService.addPatronInviteToOwner(owner.id, this.patronId))\n            .then( () => alert('Invite Sent!'))\n            .catch(() => alert('Must be logged in as Restaurant Owner'));\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Restaurants:</h1>\\n\\n\\n  <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let restaurant of restaurants\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"float-left\\\">\\n        <p>Name: {{restaurant.name}}</p>\\n      </div>\\n      <button (click)=\\\"deleteRestaurant(restaurant.id)\\\"\\n              type=\\\"button\\\" class=\\\"btn btn-danger btn-sm float-right\\\">Delete Restaurant\\n      </button>\\n    </li>\\n  </ul>\\n\\n  <div>\\n    <button (click)=\\\"goToProfile()\\\" class=\\\"btn btn-link\\\" style=\\\"float: left; color: black\\\">Return to Profile</button>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"float: right; color: black\\\">Home</button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RestaurantServiceClient} from '../services/restaurant.service.client';\n\n@Component({\n  selector: 'app-restaurant-all-restaurants',\n  templateUrl: './restaurant-all-restaurants.component.html',\n  styleUrls: ['./restaurant-all-restaurants.component.css']\n})\nexport class RestaurantAllRestaurantsComponent implements OnInit {\n\n    constructor(private router: Router,\n                private route: ActivatedRoute,\n                private restaurantService: RestaurantServiceClient) {\n        this.route.params.subscribe(params => this.loadRestaurant(params['adminId']));\n    }\n\n\n    adminId;\n\n    restaurants;\n\n    loadRestaurant(adminId) {\n        this.adminId = adminId;\n        this.restaurantService.findAllRestaurants().then(restaurants => this.restaurants = restaurants);\n    }\n\n    deleteRestaurant(restaurantId) {\n        this.restaurantService.deleteRestaurant(restaurantId)\n            .then(() => location.reload());\n    }\n\n    goToProfile() {\n        this.router.navigate(['profile/admin/' + this.adminId]);\n    }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n    <button (click)=\\\"search()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Search</button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n    <h1>{{restaurantName}}</h1>\\n    <div>\\n        <div class=\\\"form-inline\\\">\\n\\n            <img src={{restaurant.imageUrl}} style=\\\"width: 30%; height: 30%; border:5px solid #000000; float: left\\\"\\n                 hspace=\\\"20\\\">\\n\\n            <div style=\\\"float: right\\\">\\n                <p>Address: {{restaurant.address}}, {{restaurant.city}}, {{restaurant.state}}</p>\\n                <p>Phone: {{restaurant.phone}}</p>\\n                <p>Number of Visits: {{patrons.length}}</p>\\n                <p>Hours of Operation: {{restaurant.hoursOfOpp}}</p>\\n                <p>Price: {{restaurant.price}}</p>\\n\\n                <p>Average Rating: </p>\\n\\n                <div class=\\\"input-group mb-3\\\">\\n                    <input [(ngModel)]=\\\"patronUsername\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"username\\\" aria-describedby=\\\"button-addon2\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                        <button (click)=\\\"restaurantToPatron(patronUsername)\\\"\\n                                class=\\\"btn btn-dark\\\" type=\\\"button\\\" id=\\\"button-addon2\\\">Visited?</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h2>Visitors:</h2>\\n    <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let patron of patrons\\\">\\n        <li class=\\\"list-group-item\\\">\\n            <p class=\\\"float-left\\\">Name: {{patron.firstName}} {{patron.lastName}}</p>\\n            <button (click)=\\\"goToPatronsProfile(patron.id)\\\"\\n                    type=\\\"button\\\" class=\\\"btn btn-dark btn-sm float-right\\\">View Patrons's Profile\\n            </button>\\n        </li>\\n    </ul>\\n\\n    <h2>Reviews:</h2>\\n    <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let review of reviews\\\">\\n        <li class=\\\"list-group-item\\\">\\n            <div class=\\\"float-left\\\">\\n            <p>Title: {{review.title}}</p>\\n            <p>Description: {{review.description}}</p>\\n            <p>Rating: {{review.rating}}</p>\\n            </div>\\n            <button (click)=\\\"findCriticByReview(review.id)\\\"\\n                    type=\\\"button\\\" class=\\\"btn btn-dark btn-sm float-right\\\">View Critic's Profile\\n            </button>\\n        </li>\\n    </ul>\\n\\n    <h2>Events:</h2>\\n    <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let event of events\\\">\\n        <li class=\\\"list-group-item\\\">\\n            <div class=\\\"float-left\\\">\\n                <p>Title: {{event.title}}</p>\\n                <p>Description: {{event.description}}</p>\\n            </div>\\n            <button (click)=\\\"goToEvent(event.id)\\\"\\n                    type=\\\"button\\\" class=\\\"btn btn-dark btn-sm float-right\\\">View Event!\\n            </button>\\n        </li>\\n    </ul>\\n\\n    <h3>Write a Review!</h3>\\n\\n    <div>\\n        <div class=\\\"form-group\\\">\\n            <label>Username</label>\\n            <input [(ngModel)]=\\\"criticUsername\\\" class=\\\"form-control\\\"/>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"FormControlInput2\\\">Review Title</label>\\n            <input class=\\\"form-control\\\" id=\\\"FormControlInput2\\\" [(ngModel)]=\\\"reviewTitle\\\"/>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"FormControlTextarea1\\\">Review Description</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"FormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"reviewDescription\\\">\\n\\n            </textarea>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label>Restaurant Rating</label>\\n\\n            <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\n                <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n                    <button (click)=\\\"setRating(1)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">1</button>\\n                </div>\\n                <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Second group\\\">\\n                    <button (click)=\\\"setRating(2)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">2</button>\\n                </div>\\n                <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Third group\\\">\\n                    <button (click)=\\\"setRating(3)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">3</button>\\n                </div>\\n                <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Fourth group\\\">\\n                    <button (click)=\\\"setRating(4)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">4</button>\\n                </div>\\n                <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Fifth group\\\">\\n                    <button (click)=\\\"setRating(5)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">5</button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button (click)=\\\"addReview(reviewTitle, reviewDescription, criticUsername)\\\"\\n                    class=\\\"btn btn-block btn-dark\\\">Add\\n                Review\\n            </button>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <button (click)=\\\"createEvent()\\\"\\n                    class=\\\"btn btn-block btn-dark\\\">Create an Event\\n            </button>\\n        </div>\\n\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RestaurantServiceClient} from '../services/restaurant.service.client';\nimport {ReviewServiceClient} from '../services/review.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {EventServiceClient} from '../services/event.service.client';\n\n@Component({\n  selector: 'app-restaurant-detail',\n  templateUrl: './restaurant-detail.component.html',\n  styleUrls: ['./restaurant-detail.component.css']\n})\nexport class RestaurantDetailComponent implements OnInit {\n\n  constructor(private restaurantService: RestaurantServiceClient,\n              private reviewService: ReviewServiceClient,\n              private eventService: EventServiceClient,\n              private userService: UserServiceClient,\n              private criticService: CriticServiceClient,\n              private patronService: PatronServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n      this.route.params.subscribe(params => this.loadRestaurant(params['restaurantId']));\n  }\n\n  restaurant;\n  restaurantId;\n  restaurantName;\n\n  reviews;\n  reviewTitle;\n  reviewDescription;\n  reviewRating;\n\n  critic;\n  criticId;\n  criticUsername = null;\n\n  patron;\n  patronUsername = null;\n  patrons;\n\n  events;\n\n  loadRestaurant(restaurantId) {\n      this.restaurantId = restaurantId;\n      this.restaurantService.findRestaurantById(restaurantId)\n          .then(restaurant => this.loadRestaurantDetail(restaurant));\n  }\n\n  loadRestaurantDetail(restaurant) {\n      this.restaurant = restaurant;\n      this.restaurantName = this.styleName(restaurant.name);\n      this.reviewService.findReviewsByRestaurant(restaurant.id).then(\n          reviews => this.reviews = reviews);\n      this.patronService.findPatronsByRestaurant(restaurant.id).then(\n          patrons => this.patrons = patrons);\n      this.eventService.findEventsByRestaurant(restaurant.id).then(\n          events => this.events = events);\n  }\n\n  addReview(reviewTitle, reviewDescription, criticUsername) {\n      if (this.criticUsername === null) {\n          alert('Please enter a username');\n          return;\n      }\n      this.criticService.findCriticByUsername(criticUsername)\n          .then(critic => this.reviewService\n              .addReview(reviewTitle, reviewDescription, this.reviewRating, critic.id, this.restaurantId))\n          .then(() => location.reload())\n          .catch(() => alert('Must be logged in as Critic'));\n  }\n\n    restaurantToPatron(patronUsername) {\n      if (patronUsername === null) {\n          alert('Please enter a username');\n          return;\n      }\n      this.patronService.findPatronByUsername(patronUsername)\n          .then(patron => this.patronService.restaurantToPatron(patron.id, this.restaurantId))\n          .then(() => location.reload())\n          .catch(() => alert('Must be logged in as Patron'));\n    }\n\n    findCriticByReview(reviewId) {\n        this.criticService.findCriticByReview(reviewId)\n            .then(critic => this.criticId = critic.id)\n            .then(() => (this.router.navigate(['critic/' + this.criticId])));\n\n    }\n\n    goToPatronsProfile(patronId) {\n      this.router.navigate(['patron/' + patronId]);\n    }\n\n    goToEvent(eventId) {\n        this.router.navigate(['restaurant/' + this.restaurantId + '/event/' + eventId]);\n    }\n\n    createEvent() {\n        this.router.navigate(['restaurant/' + this.restaurantId + '/event']);\n    }\n\n  setRating(rating) {\n      this.reviewRating = rating;\n  }\n\n  styleName(restaurantName) {\n      let styledName = '';\n      for (let i = 0; i < restaurantName.length; i++) {\n          if (restaurantName.charAt(i) !== '-') {\n              styledName = styledName + restaurantName.charAt(i);\n          } else {\n              styledName = styledName + ' ';\n          }\n      }\n      return styledName;\n  }\n\n    goHome() {\n        this.router.navigate(['home']);\n    }\n\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n        ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div style=\\\"position: fixed; top: 20%; left: 40%;\\\">\\n        <div class=\\\"form-check-inline\\\">\\n            <h1>RE</h1>\\n            <p>[staurant]</p>\\n            <h1>SEARCH</h1>\\n        </div>\\n        <div style=\\\"align-items: center; justify-content: center;\\\">\\n\\n            <form>\\n                <div class=\\\"form-group\\\">\\n                    <button (click)=\\\"search()\\\" type=\\\"button\\\" class=\\\"btn btn-dark btn-sm btn-block\\\">Search for a Restaurant!</button>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button (click)=\\\"register()\\\" type=\\\"button\\\" class=\\\"btn btn-dark btn-sm btn-block\\\">Register</button>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button (click)=\\\"login()\\\" type=\\\"button\\\" class=\\\"btn btn-dark btn-sm btn-block\\\">Login</button>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm btn-block\\\">Logout</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n\n@Component({\n    selector: 'app-restaurant-home',\n    templateUrl: './restaurant-home.component.html',\n    styleUrls: ['./restaurant-home.component.css']\n})\nexport class RestaurantHomeComponent implements OnInit {\n\n    constructor(private router: Router,) {\n    }\n\n    search() {\n        this.router.navigate(['search']);\n    }\n\n    login() {\n        this.router.navigate(['login']);\n    }\n\n    register() {\n        this.router.navigate(['register']);\n    }\n\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <h1>Restaurant Search</h1>\\n\\n<div class=\\\"form-group\\\">\\n  <div class=\\\"input-group\\\">\\n    <input class=\\\"form-control\\\" [(ngModel)]=\\\"restaurantName\\\" placeholder=\\\"Restaurant Name\\\"/>\\n    &nbsp;\\n    <button class=\\\"btn btn-dark\\\" (click)=\\\"searchForRestaurant(restaurantName)\\\">Search</button>\\n  </div>\\n</div>\\n\\n  <div class=\\\"container\\\" class=\\\"card-columns\\\">\\n    <div *ngFor=\\\"let restaurant of restaurants\\\" class=\\\"card text-white bg-dark mb-2\\\">\\n      <img class=\\\"card-img-top\\\" src=\\\"{{restaurant.image_url}}\\\" alt=\\\"Card image cap\\\">\\n      <div class=\\\"card-body\\\">\\n        <button (click)=\\\"goToDetail(restaurant)\\\"\\n                class=\\\"btn btn-link btn-block\\\"  style=\\\"float: left; color: white\\\">{{restaurant.alias}}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {RestaurantServiceClient} from '../services/restaurant.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-restaurant-search',\n  templateUrl: './restaurant-search.component.html',\n  styleUrls: ['./restaurant-search.component.css']\n})\nexport class RestaurantSearchComponent implements OnInit {\n\n  restaurants = [];\n  restaurantName;\n  restaurantId;\n\n  constructor(private restaurantService: RestaurantServiceClient,\n              private router: Router) { }\n\n  searchForRestaurant(restaurantName) {\n      this.restaurantService.findRestaurantsByName(restaurantName)\n          .then(res => this.restaurants = res.businesses);\n  }\n\n  goToDetail(restaurant) {\n      try {\n          this.restaurantService.addRestaurant(restaurant)\n              .then(savedRestaurant => this.restaurantId = savedRestaurant.id)\n              .then(() => (this.router.navigate(['restaurant/' + this.restaurantId])));\n      } finally {\n          try {\n              this.restaurantService.findRestaurantByName(restaurant)\n                  .then(savedRestaurant => this.restaurantId = savedRestaurant.id)\n                  .then(() => (this.router.navigate(['restaurant/' + this.restaurantId])));\n          } catch (e) {\n            console.log(e);\n          }\n      }\n  }\n\n  ngOnInit() {\n      // this.().then(res => this.restaurants = res.businesses);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n<h3>Update Restaurant</h3>\\n\\n<div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"restaurantName\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input class=\\\"form-control\\\" id=\\\"FormControlInput2\\\" [(ngModel)]=\\\"restaurantAddress\\\" placeholder=\\\"Address\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input class=\\\"form-control\\\" id=\\\"FormControlInput3\\\" [(ngModel)]=\\\"restaurantCity\\\" placeholder=\\\"City\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input class=\\\"form-control\\\" id=\\\"FormControlInput4\\\" [(ngModel)]=\\\"restaurantState\\\" placeholder=\\\"State\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input class=\\\"form-control\\\" id=\\\"FormControlInput5\\\" [(ngModel)]=\\\"restaurantPhone\\\" placeholder=\\\"Phone\\\"/>\\n  </div>\\n\\n\\n  <div class=\\\"form-group\\\">\\n    <label>Price</label>\\n\\n    <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n        <button (click)=\\\"setPrice($)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">$</button>\\n      </div>\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Second group\\\">\\n        <button (click)=\\\"setPrice($$)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">$$</button>\\n      </div>\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Third group\\\">\\n        <button (click)=\\\"setPrice($$$)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">$$$</button>\\n      </div>\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Fourth group\\\">\\n        <button (click)=\\\"setPrice($$$$)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">$$$$</button>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"form-group\\\">\\n    <button (click)=\\\"updateRestaurant(restaurantName, restaurantAddress, restaurantCity, restaurantState, restaurantPhone)\\\"\\n                     class=\\\"btn btn-block btn-dark\\\">Update Restaurant\\n  </button>\\n    <button (click)=\\\"returnToProfile()\\\"\\n            class=\\\"btn btn-block btn-dark\\\">Return to Profile\\n    </button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {RestaurantServiceClient} from '../services/restaurant.service.client';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-restaurant-update',\n  templateUrl: './restaurant-update.component.html',\n  styleUrls: ['./restaurant-update.component.css']\n})\nexport class RestaurantUpdateComponent implements OnInit {\n\n    constructor(private ownerService: OwnerServiceClient,\n                private restaurantService: RestaurantServiceClient,\n                private router: Router,\n                private route: ActivatedRoute) {\n        this.route.params.subscribe(params => this.loadOwnerRestaurant(params['ownerId'], params['restaurantId']));\n    }\n\n    ownerId;\n    restaurantId;\n\n    restaurantName;\n    restaurantAddress;\n    restaurantCity;\n    restaurantState;\n    restaurantPhone;\n    restaurantPrice;\n\n    loadOwnerRestaurant(ownerId, restaurantId) {\n        this.ownerId = ownerId;\n        this.restaurantId = restaurantId;\n        this.restaurantService.findRestaurantById(this.restaurantId)\n            .then(restaurant => this.loadRestaurant(restaurant));\n    }\n\n    loadRestaurant(restaurant) {\n      this.restaurantName = restaurant.name;\n        this.restaurantAddress = restaurant.address;\n        this.restaurantCity = restaurant.city;\n        this.restaurantState = restaurant.state;\n        this.restaurantPhone = restaurant.phone;\n    }\n\n    updateRestaurant(restaurantName, restaurantAddress, restaurantCity, restaurantState, restaurantPhone) {\n      this.restaurantService.updateRestaurant(restaurantName, restaurantAddress, restaurantCity,\n          restaurantState, restaurantPhone, this.restaurantPrice, this.restaurantId)\n          .then(() => alert('Update Complete!'));\n    }\n\n    returnToProfile() {\n        this.router.navigate(['profile/owner/' + this.ownerId]);\n    }\n\n    setPrice(price) {\n      this.restaurantPrice = price;\n    }\n\n    ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n<h3>Update a Review</h3>\\n\\n<div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"FormControlInput2\\\">Review Title</label>\\n    <input class=\\\"form-control\\\" id=\\\"FormControlInput2\\\" [(ngModel)]=\\\"reviewTitle\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"FormControlTextarea1\\\">Review Description</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"FormControlTextarea1\\\" rows=\\\"3\\\" [(ngModel)]=\\\"reviewDescription\\\">\\n\\n            </textarea>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label>Restaurant Rating</label>\\n\\n    <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n        <button (click)=\\\"setRating(1)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">1</button>\\n      </div>\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Second group\\\">\\n        <button (click)=\\\"setRating(2)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">2</button>\\n      </div>\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Third group\\\">\\n        <button (click)=\\\"setRating(3)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">3</button>\\n      </div>\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Fourth group\\\">\\n        <button (click)=\\\"setRating(4)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">4</button>\\n      </div>\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Fifth group\\\">\\n        <button (click)=\\\"setRating(5)\\\" type=\\\"button\\\" class=\\\"btn btn-dark\\\">5</button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <button (click)=\\\"updateReview(reviewTitle, reviewDescription)\\\"\\n            class=\\\"btn btn-block btn-dark\\\">Update\\n      Review\\n    </button>\\n    <button (click)=\\\"returnToProfile()\\\"\\n            class=\\\"btn btn-block btn-dark\\\">Return to Profile\\n    </button>\\n  </div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {EventServiceClient} from '../services/event.service.client';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {ReviewServiceClient} from '../services/review.service.client';\n\n@Component({\n  selector: 'app-review-update',\n  templateUrl: './review-update.component.html',\n  styleUrls: ['./review-update.component.css']\n})\nexport class ReviewUpdateComponent implements OnInit {\n\n    constructor(private criticService: CriticServiceClient,\n                private reviewService: ReviewServiceClient,\n                private router: Router,\n                private route: ActivatedRoute) {\n        this.route.params.subscribe(params => this.loadCriticReview(params['criticId'], params['reviewId']));\n    }\n\n\n    criticId;\n    reviewId;\n\n    reviewTitle;\n    reviewDescription;\n    reviewRating;\n\n    loadCriticReview(criticId, reviewId) {\n        this.criticId = criticId;\n        this.reviewId = reviewId;\n        this.reviewService.findReviewById(this.reviewId)\n            .then(event => this.loadReview(event));\n    }\n\n    loadReview(review) {\n        this.reviewTitle = review.title;\n        this.reviewDescription = review.description;\n    }\n\n    updateReview(reviewTitle, reviewDescription) {\n      this.reviewService.updateReview(reviewTitle, reviewDescription, this.reviewRating, this.reviewId);\n    }\n\n    setRating(rating) {\n      this.reviewRating = rating;\n    }\n\n    returnToProfile() {\n        this.router.navigate(['profile/critic/' + this.criticId]);\n    }\n\n  ngOnInit() {\n  }\n\n}\n","export class AdminServiceClient {\n\n\n    findAdminById(adminId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/admin/' + adminId)\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    createAdmin(username, password) {\n        const user = {\n            username: username,\n            password: password\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/admin', {\n            body: JSON.stringify(user),\n            credentials: 'same-origin', // include, same-origin, *omit\n            method: 'post',\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n    updateAdmin(firstName, lastName, email, phone, dob, userId) {\n        const user = {\n            firstName: firstName,\n            lastName: lastName,\n            phone: phone,\n            email: email,\n            dob: dob\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/admin/' + userId, {\n            body: JSON.stringify(user),\n            method: 'put',\n            headers: {\n                'content-type': 'application/json'\n            }\n        });\n    }\n\n    loginAdmin(username, password) {\n        const credentials = {\n            username: username,\n            password: password\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/admin/login', {\n            method: 'post',\n            credentials: 'same-origin',\n            body: JSON.stringify(credentials),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n}\n","export class CriticServiceClient {\n\n\n    findCriticById(criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId)\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findAllCritics() {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findCriticByReview(reviewId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/review/' + reviewId + '/critic')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findCriticsByPatron(patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/' + patronId + '/critic')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findCriticsByOwner(ownerId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId + '/critic')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findCriticsByEvent(eventId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/event/' + eventId + '/critic')\n            .then(function (response) { return response.json();\n            });\n    }\n\n    findCriticInvitesByOwner(ownerId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId + '/criticInvite')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    addBlockPatron(patronId, criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/' + patronId + '/critic/' + criticId);\n    }\n\n    addOwnerToCriticEndorsed(ownerId, criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId + '/critic/' + criticId);\n    }\n\n    addEventToCritic(eventId, criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/event/' + eventId + '/critic/' + criticId);\n    }\n\n    findCriticByUsername(username) {\n        const user = {\n            username: username\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/username', {\n            method: 'post',\n            body: JSON.stringify(user),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n\n    createCritic(username, password) {\n        const user = {\n            username: username,\n            password: password\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic', {\n            body: JSON.stringify(user),\n            credentials: 'same-origin', // include, same-origin, *omit\n            method: 'post',\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n    updateCritic(firstName, lastName, email, phone, dob, userId) {\n        const user = {\n            firstName: firstName,\n            lastName: lastName,\n            phone: phone,\n            email: email,\n            dob: dob\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + userId, {\n            body: JSON.stringify(user),\n            method: 'put',\n            headers: {\n                'content-type': 'application/json'\n            }\n        });\n    }\n\n    deleteCritic(criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId, {\n            method: 'delete'\n        });\n    }\n\n    loginCritic(username, password) {\n        const credentials = {\n            username: username,\n            password: password\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/login', {\n            method: 'post',\n            credentials: 'same-origin',\n            body: JSON.stringify(credentials),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n\n}\n","export class EventServiceClient {\n\n\n    findEventById(eventId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/event/' + eventId)\n            .then(response => response.json());\n    }\n\n\n    findAllEvents() {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/event/')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findEventsByRestaurant(restaurantId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/restaurant/' + restaurantId + '/event')\n            .then(function (response) { return response.json();\n            });\n    }\n\n    findEventsByOwner(ownerId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId + '/event')\n            .then(function (response) { return response.json();\n            });\n    }\n\n    findEventsByCritic(criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId + '/event')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findEventsByPatron(patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/' + patronId + '/event')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    createEvent(title, description, dateTime, price, attire, ownerId, restaurantId) {\n        const event = {\n            title: title,\n            description: description,\n            dateTime: dateTime,\n            price: price,\n            attire: attire\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId + '/restaurant/' + restaurantId + '/event', {\n            method: 'post',\n            body: JSON.stringify(event),\n            credentials: 'same-origin',\n            headers: {\n                'content-type': 'application/json',\n            }\n        }).then(response => response.json());\n    }\n\n    updateEvent(title, description, dateTime, price, attire, eventId) {\n        const event = {\n            title: title,\n            description: description,\n            dateTime: dateTime,\n            price: price,\n            attire: attire\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/event/' + eventId, {\n            method: 'put',\n            body: JSON.stringify(event),\n            headers: {\n                'content-type': 'application/json',\n            }\n        }).then(response => response.json());\n    }\n\n    deleteEvent(eventId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/event/' + eventId, {\n            method: 'delete'\n        });\n    }\n}\n\n\n","export class OwnerServiceClient {\n\n\n    findOwnerById(ownerId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId)\n            .then(response => response.json());\n    }\n\n    findAllOwners() {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findOwnerByUsername(username) {\n        const user = {\n            username: username\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/username', {\n            method: 'post',\n            body: JSON.stringify(user),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n    findOwnerByEvent(eventId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/event/' + eventId + '/owner')\n            .then(function (response) { return response.json();\n            });\n    }\n\n    findOwnerInvitesByCritic(criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId + '/owner')\n            .then(function (response) { return response.json();\n            });\n    }\n\n    findOwnerInvitesByPatron(patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/' + patronId + '/owner')\n            .then(function (response) { return response.json();\n            });\n    }\n\n    findOwnerEndorsementsByPatron(patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/' + patronId + '/ownerEndorsements')\n            .then(function (response) { return response.json();\n            });\n    }\n\n    findOwnerEndorsementsByCritic(criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId + '/ownerEndorsements')\n            .then(function (response) { return response.json();\n            });\n    }\n\n    addCriticInviteToOwner(ownerId, criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId + '/owner/' + ownerId);\n    }\n\n    addPatronInviteToOwner(ownerId, patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/' + patronId + '/owner/' + ownerId);\n    }\n\n    createOwner(username, password) {\n        const user = {\n            username: username,\n            password: password\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner', {\n            body: JSON.stringify(user),\n            method: 'post',\n            credentials: 'same-origin',\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => {\n            return response.json();\n        });\n    }\n\n    updateOwner(firstName, lastName, email, phone, dob, userId) {\n        const user = {\n            firstName: firstName,\n            lastName: lastName,\n            phone: phone,\n            email: email,\n            dob: dob\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + userId, {\n            body: JSON.stringify(user),\n            method: 'put',\n            headers: {\n                'content-type': 'application/json'\n            }\n        });\n    }\n\n    deleteOwner(ownerId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId, {\n            method: 'delete'\n        });\n    }\n\n    loginOwner(username, password) {\n        const credentials = {\n            username: username,\n            password: password\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/login', {\n            method: 'post',\n            credentials: 'same-origin',\n            body: JSON.stringify(credentials),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n}","export class PatronServiceClient {\n\n\n    findPatronById(patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/' + patronId)\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findAllPatrons() {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findPatronByUsername(username) {\n        const user = {\n            username: username\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/username', {\n            method: 'post',\n            body: JSON.stringify(user),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n    findPatronsByRestaurant(restaurantId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/restaurant/' + restaurantId + '/patron')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findPatronsByCritic(criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId + '/patron')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findBlockPatronsByCritic(criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId + '/blockpatron')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findPatronsByOwner(ownerId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId + '/patron')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findPatronsByEvent(eventId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/event/' + eventId + '/patron')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findPatronInvitesByOwner(ownerId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId + '/patronInvite')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n\n    findFavoriteCritic(patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/favoriteCritic/' + patronId + '/patron')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    createPatron(username, password) {\n        const user = {\n            username: username,\n            password: password\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron', {\n            body: JSON.stringify(user),\n            credentials: 'same-origin', // include, same-origin, *omit\n            method: 'post',\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n    updatePatron(firstName, lastName, email, phone, dob, userId) {\n        const user = {\n            firstName: firstName,\n            lastName: lastName,\n            phone: phone,\n            email: email,\n            dob: dob\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/' + userId, {\n            body: JSON.stringify(user),\n            method: 'put',\n            headers: {\n                'content-type': 'application/json'\n            }\n        });\n    }\n\n    restaurantToPatron(patronId, restaurantId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/restaurant/' + restaurantId + '/patron/' + patronId);\n    }\n\n    criticToPatron(patronId, criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId + '/patron/' + patronId);\n    }\n\n    addOwnerToPatronEndorsed(ownerId, patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId + '/patron/' + patronId);\n    }\n\n    addEventToPatron(eventId, patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/event/' + eventId + '/patron/' + patronId);\n    }\n\n    addFavoriteCritic(criticId, patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/favoriteCritic/' + criticId + '/patron/' + patronId);\n    }\n\n    deletePatron(patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/' + patronId, {\n            method: 'delete'\n        });\n    }\n\n    loginPatron(username, password) {\n        const credentials = {\n            username: username,\n            password: password\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/login', {\n            method: 'post',\n            credentials: 'same-origin',\n            body: JSON.stringify(credentials),\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n\n}\n","export class RestaurantServiceClient {\n\n    token = 'Bearer _rSdKYm3xXCbQ_aE5Vw6q4xL5RxcwJgexzMo5-3-uLHBzDZCH_2xr0E_8C2oA4JHuHWckmGGRT0BvwF4vZzf-' +\n        'l26J5CYJ2U53n7SFNweH90tUfr37m717OiqSXxoW3Yx';\n\n    findRestaurantsByName(restaurantName) {\n        return fetch('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/' +\n            'search?term=' + restaurantName + '&latitude=42.3601&longitude=-71.0589',\n            {headers: {'Authorization': this.token}})\n            .then(response => response.json());\n    }\n\n    findAllRestaurants() {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/restaurant/')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findRestaurantByName(restaurant) {\n        const data = {\n            name: restaurant.alias\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/restaurant/name', {\n            method: 'post',\n            body: JSON.stringify(data),\n            headers: {\n                'content-type': 'application/json',\n            }\n        }).then(response => response.json());\n    }\n\n    findRestaurantById(restaurantId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/restaurant/' + restaurantId).then(response => response.json());\n    }\n\n    findRestaurantsByPatron(patronId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/patron/' + patronId + '/restaurant')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findRestaurantsByOwner(ownerId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId + '/restaurant')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    addRestaurantWithOwner(name, address, city, state, phone, price, ownerId) {\n        const data = {\n            name: name,\n            yelpId: '',\n            address: address,\n            city: city,\n            state: state,\n            phone: phone,\n            numberOfVisits: '',\n            price: price,\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/owner/' + ownerId + '/restaurant', {\n            method: 'post',\n            body: JSON.stringify(data),\n            headers: {\n                'content-type': 'application/json',\n            }\n        }).then(response => response.json());\n    }\n\n    addRestaurant(restaurant) {\n        const data = {\n            name: restaurant.alias,\n            yelpId: restaurant.id,\n            address: restaurant.location.address1,\n            city: restaurant.location.city,\n            state: restaurant.location.state,\n            phone: restaurant.phone,\n            numberOfVisits: restaurant.review_count,\n            price: restaurant.price,\n            imageUrl: restaurant.image_url\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/restaurant', {\n            method: 'post',\n            body: JSON.stringify(data),\n            headers: {\n                'content-type': 'application/json',\n            }\n        }).then(response => response.json());\n    }\n\n    updateRestaurant(restaurantName, restaurantAddress, restaurantCity,\n                     restaurantState, restaurantPhone, restaurantPrice, restaurantId) {\n        const data = {\n            name: restaurantName,\n            address: restaurantAddress,\n            city: restaurantCity,\n            state: restaurantState,\n            phone: restaurantPhone,\n            price: restaurantPrice,\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/restaurant/' + restaurantId, {\n            method: 'put',\n            body: JSON.stringify(data),\n            headers: {\n                'content-type': 'application/json',\n            }\n        }).then(response => response.json());\n    }\n\n    deleteRestaurant(restaurantId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/restaurant/' + restaurantId, {\n            method: 'delete'\n        });\n    }\n\n\n}\n","export class ReviewServiceClient {\n\n    addReview(title, description, rating, criticId, restaurantId) {\n        const review = {\n            title: title,\n            description: description,\n            rating: rating,\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId + '/restaurant/' + restaurantId + '/review', {\n            method: 'post',\n            body: JSON.stringify(review),\n            headers: {\n                'content-type': 'application/json',\n            }\n        }).then(response => response.json());\n    }\n\n    addReviewForEvent(title, description, rating, criticId, eventId) {\n        const review = {\n            title: title,\n            description: description,\n            rating: rating,\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId + '/event/' + eventId + '/review', {\n            method: 'post',\n            body: JSON.stringify(review),\n            headers: {\n                'content-type': 'application/json',\n            }\n        }).then(response => response.json());\n    }\n\n    findReviewById(reviewId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/review/' + reviewId)\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findReviewsByCritic(criticId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/critic/' + criticId + '/review')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findReviewsByRestaurant(restaurantId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/restaurant/' + restaurantId + '/review')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    findReviewsByEvent(eventId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/event/' + eventId + '/review')\n            .then(function (response) {\n                return response.json();\n            });\n    }\n\n    updateReview(title, description, rating, reviewId) {\n        const review = {\n            title: title,\n            description: description,\n            rating: rating,\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/review/' + reviewId, {\n            method: 'put',\n            body: JSON.stringify(review),\n            headers: {\n                'content-type': 'application/json',\n            }\n        }).then(response => response.json());\n    }\n\n    deleteReview(reviewId) {\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/review/' + reviewId, {\n            method: 'delete'\n        });\n    }\n}\n","export class UserServiceClient {\n\n    createAdmin(username, password) {\n        const user = {\n            username: username,\n            password: password\n        };\n        return fetch('http://cs5200-final-project-delsener-lo.us-east-2.elasticbeanstalk.com/api/admin', {\n            body: JSON.stringify(user),\n            credentials: 'include', // include, same-origin, *omit\n            method: 'post',\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Login</h1>\\n\\n  <div class=\\\"form-group\\\">\\n   <input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"password\\\" placeholder=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\"/>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n      <button (click)=\\\"setRole('patron')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Restaurant Patron</button>\\n      <button (click)=\\\"setRole('critic')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Critic</button>\\n      <button (click)=\\\"setRole('owner')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Restaurant Owner</button>\\n      <button (click)=\\\"setRole('admin')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Administrator</button>\\n    </div>\\n  </div>\\n\\n  <button (click)=\\\"login(username, password)\\\" class=\\\"btn btn-block btn-dark\\\">Login</button>\\n\\n  <div>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: left\\\">Home</button>\\n    <button (click)=\\\"goRegister()\\\" class=\\\"btn btn-link\\\" style=\\\"color: black; float: right\\\">Not a User? Register!</button>\\n\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {AdminServiceClient} from '../services/admin.service.client';\n\n\n@Component({\n  selector: 'app-restaurant-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n\n  constructor(private router: Router,\n              private adminService: AdminServiceClient,\n              private criticService: CriticServiceClient,\n              private ownerService: OwnerServiceClient,\n              private patronService: PatronServiceClient) { }\n\n  userId;\n  username;\n  password;\n  role = null;\n\n  setRole(role) {\n    this.role = role;\n  }\n\n  login(username, password) {\n    if (this.role === null) {\n      alert('please specify a user type');\n    } else if (this.role === 'owner') {\n          this.ownerService.loginOwner(username, password)\n              .then(user => (this.userId = user.id))\n              .then(() => (this.router.navigate(['profile/owner/' + this.userId])))\n              .catch(() => alert('Username and/or Password are not Valid'));\n      } else if  (this.role === 'critic') {\n        this.criticService.loginCritic(username, password)\n            .then(user => (this.userId = user.id))\n            .then(() => (this.router.navigate(['profile/critic/' + this.userId])))\n            .catch(() => alert('Username and/or Password are not Valid'));\n    } else if (this.role === 'patron') {\n        this.patronService.loginPatron(username, password)\n            .then(user => (this.userId = user.id))\n            .then(() => (this.router.navigate(['profile/patron/' + this.userId])))\n            .catch(() => alert('Username and/or Password are not Valid'));\n    } else if (this.role === 'admin') {\n        this.adminService.loginAdmin(username, password)\n            .then(user => (this.userId = user.id))\n            .then(() => (this.router.navigate(['profile/admin/' + this.userId])))\n            .catch(() => alert('Username and/or Password are not Valid'));\n    }\n\n  }\n\n  goHome() {\n    this.router.navigate(['home']);\n  }\n\n  goRegister() {\n    this.router.navigate(['register']);\n    }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Register</h1>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"passwordI\\\" placeholder=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [(ngModel)]=\\\"passwordII\\\" placeholder=\\\"verify password\\\" class=\\\"form-control\\\" type=\\\"password\\\"/>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n      <button (click)=\\\"setRole('patron')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Restaurant Patron</button>\\n      <button (click)=\\\"setRole('critic')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Critic</button>\\n      <button (click)=\\\"setRole('owner')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Restaurant Owner</button>\\n      <button (click)=\\\"setRole('admin')\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Administrator</button>\\n    </div>\\n  </div>\\n\\n  <button (click)=\\\"register(username, passwordI, passwordII)\\\" class=\\\"btn btn-block btn-dark\\\">Register</button>\\n\\n  <div>\\n    <button (click)=\\\"goHome()\\\" class=\\\"btn btn-link\\\" style=\\\"float: left; color: black\\\">Home</button>\\n    <button (click)=\\\"goLogin()\\\" class=\\\"btn btn-link\\\" style=\\\"float: right; color: black\\\">Already a User? Login!</button>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {OwnerServiceClient} from '../services/owner.service.client';\nimport {CriticServiceClient} from '../services/critic.service.client';\nimport {PatronServiceClient} from '../services/patron.service.client';\nimport {AdminServiceClient} from '../services/admin.service.client';\n\n@Component({\n  selector: 'app-restaurant-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private adminService: AdminServiceClient,\n              private ownerService: OwnerServiceClient,\n              private criticService: CriticServiceClient,\n              private patronService: PatronServiceClient) { }\n\n  username;\n  role = null;\n  passwordI;\n  passwordII;\n  userId;\n\n  setRole(role) {\n    this.role = role;\n  }\n\n  register(username, passwordI, passwordII) {\n    if (passwordI !== passwordII) {\n      alert('passwords do not match');\n    } else if (this.role === null) {\n        alert('please specify user type');\n    }\n    else if (this.role === 'patron') {\n        this.patronService.createPatron(username, passwordI)\n            .then(user => (this.userId = user.id))\n            .then(() => (this.router.navigate(['profile/patron/' + this.userId])))\n            .catch(() => alert('Username already exists, please try again'));\n    } else if (this.role === 'owner') {\n      this.ownerService.createOwner(username, passwordI)\n          .then(user => (this.userId = user.id))\n          .then(() => (this.router.navigate(['profile/owner/' + this.userId])))\n          .catch(() => alert('Username already exists, please try again'));\n    } else if (this.role === 'critic') {\n        this.criticService.createCritic(username, passwordI)\n            .then(user => (this.userId = user.id))\n            .then(() => (this.router.navigate(['profile/critic/' + this.userId])))\n            .catch(() => alert('Username already exists, please try again'));\n    } else if (this.role === 'admin') {\n        this.adminService.createAdmin(username, passwordI)\n            .then(user => (this.userId = user.id))\n            .then(() => (this.router.navigate(['profile/admin/' + this.userId])))\n            .catch(() => alert('Username already exists, please try again'));\n    }\n  }\n\n  goHome() {\n    this.router.navigate(['home']);\n  }\n\n  goLogin() {\n    this.router.navigate(['login']);\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}